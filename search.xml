<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Centos7 手动编译升级 gcc</title>
      <link href="/linux/centos7-shengji-gcc/"/>
      <url>/linux/centos7-shengji-gcc/</url>
      <content type="html"><![CDATA[<h1 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h1><p>原地址：<a href="http://ftp.gnu.org/gnu/gcc/" target="_blank" rel="noopener">http://ftp.gnu.org/gnu/gcc/</a><br>国内使用：<a href="https://mirrors.ustc.edu.cn/gnu/gcc/" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/gnu/gcc/</a>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://ftp.gnu.org/gnu/gcc/gcc-9.1.0/gcc-9.1.0.tar.gz</span><br><span class="line"></span><br><span class="line">tar  -zcvf gcc-9.1.0.tar.gz</span><br></pre></td></tr></table></figure><p>到这里不要直接编译安装的，先把下面的依赖检查一下有没有装好。</p><a id="more"></a><h1 id="检查和安装依赖项"><a href="#检查和安装依赖项" class="headerlink" title="检查和安装依赖项"></a>检查和安装依赖项</h1><h2 id="检查依赖"><a href="#检查依赖" class="headerlink" title="检查依赖"></a>检查依赖</h2><p>因为我这里都已经装好了，所以显示成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd gcc-9.1.0</span><br><span class="line"></span><br><span class="line">./contrib/download_prerequisites</span><br><span class="line"></span><br><span class="line">gmp-6.1.0.tar.bz2: 确定</span><br><span class="line">mpfr-3.1.4.tar.bz2: 确定</span><br><span class="line">mpc-1.0.3.tar.gz: 确定</span><br><span class="line">isl-0.18.tar.bz2: 确定</span><br><span class="line">All prerequisites downloaded successfully.</span><br></pre></td></tr></table></figure></p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>如果上面依赖缺少的，就需要安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install gmp-devel</span><br><span class="line"></span><br><span class="line">yum install mpfr-devel</span><br><span class="line"></span><br><span class="line">yum install libmpc-devel</span><br></pre></td></tr></table></figure></p><p>安装 isl：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://gcc.gnu.org/pub/gcc/infrastructure/isl-0.18.tar.bz2</span><br><span class="line"></span><br><span class="line">tar -jxvf isl-0.18.tar.bz2</span><br><span class="line"></span><br><span class="line">cd isl-0.18 </span><br><span class="line"></span><br><span class="line">./configure   </span><br><span class="line"></span><br><span class="line">make  </span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>安装完成，再检车一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./contrib/download_prerequisites</span><br></pre></td></tr></table></figure></p><h1 id="编译安装gcc"><a href="#编译安装gcc" class="headerlink" title="编译安装gcc"></a>编译安装gcc</h1><p>安装开发环境依赖：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;Development Tools&quot;</span><br><span class="line"></span><br><span class="line">yum install glibc-static libstdc++-static</span><br></pre></td></tr></table></figure></p><p>安装gcc：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cd gcc-9.1.0</span><br><span class="line"></span><br><span class="line">mkdir gcc-build-9</span><br><span class="line"></span><br><span class="line">cd gcc-build-9</span><br><span class="line"></span><br><span class="line">../configure --prefix=/usr/local/gcc9 --enable-languages=c,c++,go  --disable-multilib</span><br><span class="line"></span><br><span class="line">make -j4 (-j4选项是make对多核处理器的优化，如果不成功请使用 make，相关优化选项可以移步至参考文献[2]。建议不要使用make -j来编译，虽然可以缩短编译时间，但极大可能会编译失败)</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><h1 id="替换旧的gcc"><a href="#替换旧的gcc" class="headerlink" title="替换旧的gcc"></a>替换旧的gcc</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rm -f /usr/bin/gcc</span><br><span class="line"></span><br><span class="line">rm -f /usr/bin/g++</span><br><span class="line"></span><br><span class="line">ln -s /usr/local/gcc9/bin/gcc /usr/bin/gcc</span><br><span class="line"></span><br><span class="line">ln -s /usr/local/gcc9/bin/g++ /usr/bin/g++</span><br></pre></td></tr></table></figure><h1 id="更新libstdc"><a href="#更新libstdc" class="headerlink" title="更新libstdc++"></a>更新libstdc++</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 找到现有的版本</span><br><span class="line">ls -lrt /usr/lib64/libstdc++.so.6</span><br><span class="line"></span><br><span class="line">lrwxrwxrwx. 1 root root 19 8月   8 08:39 /usr/lib64/libstdc++.so.6 -&gt; libstdc++.so.6.0.19</span><br><span class="line"></span><br><span class="line">rm -f /usr/lib64/libstdc++.so.6</span><br><span class="line"></span><br><span class="line">ln -s /usr/local/lib64/libstdc++.so.6.0.26 /usr/lib64/libstdc++.so.6</span><br></pre></td></tr></table></figure><p>完成！</p>]]></content>
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Linux </tag>
            
            <tag> Gcc </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot实现12306自动抢票系统</title>
      <link href="/java/spring-boot/springboot-shixian-12306-qiangpiao/"/>
      <url>/java/spring-boot/springboot-shixian-12306-qiangpiao/</url>
      <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>前段时间在浏览开源社区的时候，不小心看到一个 <code>12306抢票</code> 系统，一下就被吸引住了，然后就动力歪念头😏，过年终于不用找黄牛了，哇哈哈哈，写了差不多一个星期，终于可以全自动抢票了，中间遇到的坑也是挺多的，在这里分享一下，供大家参考学习。<br><a id="more"></a></p><h1 id="如何分析12306接口"><a href="#如何分析12306接口" class="headerlink" title="如何分析12306接口"></a>如何分析12306接口</h1><p>使用 <code>Chrome</code> 或者 <code>Firefox</code> 浏览器，我这里用的是 <code>Firefox</code>，打开12306官网，然后打开开发者选项，点击<code>网络</code>选项卡，就可以观察到所有的请求接口情况了。<br>然后按照正常的流程，开始下单，没点击一部，然后看下面的控制台的请求情况，和分析接口的意义，这是一个很苦逼的过程😭。<br><img src="http://cdn.qianxunclub.com/blog/Qianxunclub2019-06-12_15-38-57.jpg" alt=""></p><h1 id="必要的接口"><a href="#必要的接口" class="headerlink" title="必要的接口"></a>必要的接口</h1><p>我这了整理了一些必要的一些接口，也是按照购票顺序写的。</p><h3 id="1-获取站点信息"><a href="#1-获取站点信息" class="headerlink" title="1.获取站点信息"></a>1.获取站点信息</h3><p>购票一部分站点参数使用的是编码，并不是汉字，需要使用这个接口获取对应的值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9098</span><br></pre></td></tr></table></figure></p><h3 id="2-获取cookies"><a href="#2-获取cookies" class="headerlink" title="2.获取cookies"></a>2.获取cookies</h3><p>这个是为了获取必要的两个 cookie 的值的：<code>RAIL_EXPIRATION</code> 和 <code>RAIL_EXPIRATION</code>。</p><blockquote><p>这个接口就比较吊了，有特么好神奇，至今没搞懂后面的参数哪里来的，目前的是这俩 cookie 都是手动写死的，等研究出来，补充一下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/HttpZF/logdevice?algID=&amp;hashCode=Ja4gW6Upz9XdOiA2-UBi5DjyNsB3Fmf3L0wxipiFro4&amp;FMQw=0&amp;q4f3=zh-CN&amp;VySQ=FGEYxQuwmyAY0Gevguxv6Ch8vDiXELlH&amp;VPIf=1&amp;custID=133&amp;VEek=unspecified&amp;dzuS=32.0%20r0&amp;yD16=0&amp;EOQP=c227b88b01f5c513710d4b9f16a5ce52&amp;lEnu=2886729839&amp;jp76=b34839808806e7ff02df813671ec99b3&amp;hAqN=MacIntel&amp;platform=WEB&amp;ks0Q=a103db222cd8296a50268c8f0355b741&amp;TeRS=877x1440&amp;tOHY=24xx900x1440&amp;Fvje=i1l1s1&amp;q5aJ=-8&amp;wNLf=99115dfb07133750ba677d055874de87&amp;0aew=Mozilla/5.0%20(Macintosh;%20Intel%20Mac%20OS%20X%2010.14;%20rv:67.0)%20Gecko/20100101%20Firefox/67.0&amp;E3gR=6c9c3674a3e453e368c3a0cc46f30eb8&amp;timestamp=1560399328000</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="3-车票查询"><a href="#3-车票查询" class="headerlink" title="3.车票查询"></a>3.车票查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=%s&amp;leftTicketDTO.from_station=%s&amp;leftTicketDTO.to_station=%s&amp;purpose_codes=ADULT</span><br></pre></td></tr></table></figure><h3 id="4-登录配置查询"><a href="#4-登录配置查询" class="headerlink" title="4.登录配置查询"></a>4.登录配置查询</h3><p>这个接口就是为了查看登录是否需要验证码的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/login/conf</span><br></pre></td></tr></table></figure></p><h3 id="5-读取验证码"><a href="#5-读取验证码" class="headerlink" title="5.读取验证码"></a>5.读取验证码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/passport/captcha/captcha-image64?login_site=E&amp;module=login&amp;rand=sjrand&amp;_=%s</span><br></pre></td></tr></table></figure><h3 id="6-校验验证码"><a href="#6-校验验证码" class="headerlink" title="6.校验验证码"></a>6.校验验证码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/passport/captcha/captcha-check?answer=%s&amp;rand=sjrand&amp;login_site=E&amp;_=%s</span><br></pre></td></tr></table></figure><h3 id="7-登录"><a href="#7-登录" class="headerlink" title="7.登录"></a>7.登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/passport/web/login</span><br></pre></td></tr></table></figure><h3 id="8-校验是否登录成功"><a href="#8-校验是否登录成功" class="headerlink" title="8.校验是否登录成功"></a>8.校验是否登录成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/passport/web/auth/uamtk-static?appid=otn</span><br></pre></td></tr></table></figure><h3 id="9-获取uamtk"><a href="#9-获取uamtk" class="headerlink" title="9.获取uamtk"></a>9.获取<code>uamtk</code></h3><p>获取这个东西是为了后面获取用户 <code>tk</code> 做准备的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/passport/web/auth/uamtk</span><br></pre></td></tr></table></figure></p><h3 id="10-获取当前登录的tk"><a href="#10-获取当前登录的tk" class="headerlink" title="10.获取当前登录的tk"></a>10.获取当前登录的<code>tk</code></h3><p>这东西后面买票是必须使用的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/uamauthclient</span><br></pre></td></tr></table></figure></p><h3 id="11-买票前校验用户是否正常登录"><a href="#11-买票前校验用户是否正常登录" class="headerlink" title="11.买票前校验用户是否正常登录"></a>11.买票前校验用户是否正常登录</h3><p>这个接口只是为了校验，没有实际意义。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/login/checkUser</span><br></pre></td></tr></table></figure></p><h3 id="12-点击预定按钮"><a href="#12-点击预定按钮" class="headerlink" title="12.点击预定按钮"></a>12.点击预定按钮</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/leftTicket/submitOrderRequest</span><br></pre></td></tr></table></figure><h3 id="13-获取两个token"><a href="#13-获取两个token" class="headerlink" title="13.获取两个token"></a>13.获取两个<code>token</code></h3><p>这个接口会获取两个 <code>token</code>。<br><code>globalRepeatSubmitToken</code>:获取乘客信息、检查订单、获取排队情况、提交订单使用。<br><code>key_check_isChange</code>:提交订单使用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/confirmPassenger/initDc</span><br></pre></td></tr></table></figure></p><h3 id="14-获取乘客信息"><a href="#14-获取乘客信息" class="headerlink" title="14.获取乘客信息"></a>14.获取乘客信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/confirmPassenger/getPassengerDTOs</span><br></pre></td></tr></table></figure><h3 id="15-提交前检查订单"><a href="#15-提交前检查订单" class="headerlink" title="15.提交前检查订单"></a>15.提交前检查订单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/confirmPassenger/checkOrderInfo</span><br></pre></td></tr></table></figure><h3 id="16-获取排队情况"><a href="#16-获取排队情况" class="headerlink" title="16. 获取排队情况"></a>16. 获取排队情况</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/confirmPassenger/getQueueCount</span><br></pre></td></tr></table></figure><h3 id="17-提交订单"><a href="#17-提交订单" class="headerlink" title="17.提交订单"></a>17.提交订单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/confirmPassenger/confirmSingleForQueue</span><br></pre></td></tr></table></figure><h3 id="18-获取订单"><a href="#18-获取订单" class="headerlink" title="18.获取订单"></a>18.获取订单</h3><p>这个获取订单接口必须成功，才能确定下单成功的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kyfw.12306.cn/otn/confirmPassenger/queryOrderWaitTime</span><br></pre></td></tr></table></figure></p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><p><a href="https://gitee.com/qianxunclub/ticket" target="_blank" rel="noopener"><img src="https://gitee.com/qianxunclub/ticket/widgets/widget_6.svg" alt="Fork me on Gitee"></a></p><p>因为代码有部分敏感信息，所以我这就重新打包上传到QQ群了。<br><code>加QQ群下载：852214454</code>  </p>]]></content>
      
      <categories>
          
          <category> Java </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ansible的安装配置和配合sshpass的使用</title>
      <link href="/linux/ansible-de-an-zhuang-he-shi-yong-ssh-pass/"/>
      <url>/linux/ansible-de-an-zhuang-he-shi-yong-ssh-pass/</url>
      <content type="html"><![CDATA[<h1 id="ansible安装"><a href="#ansible安装" class="headerlink" title="ansible安装"></a>ansible安装</h1><p>官网安装文档：<a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#installing-the-control-machine" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#installing-the-control-machine</a></p><ul><li>centos使用yum安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install ansible</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>Ubuntu使用apt-get安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ansible</span><br></pre></td></tr></table></figure></li><li><p>MAC使用pip安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install ansible</span><br></pre></td></tr></table></figure></li></ul><p>其他安装方式，参考官网安装文档吧。</p><h1 id="ansible配置"><a href="#ansible配置" class="headerlink" title="ansible配置"></a>ansible配置</h1><p>官网配置文件介绍：<a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_configuration.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/installation_guide/intro_configuration.html</a></p><p>我自己的配合文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ansible.cfg</span><br><span class="line"></span><br><span class="line">[defaults]</span><br><span class="line">hostfile=$HOME/.ansible/hosts</span><br><span class="line">deprecation_warnings=False</span><br><span class="line">#host_key_checking=Falses</span><br></pre></td></tr></table></figure></p><ul><li>hostfile：host配置文件的目录，默认是在<code>/etc/ansible/hosts</code></li><li>deprecation_warnings：不要警告信息</li></ul><h1 id="hosts配置"><a href="#hosts配置" class="headerlink" title="hosts配置"></a>hosts配置</h1><p>在上面配置信息<code>hostfile</code>的路径找到<code>hosts</code>文件编辑：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ansible/hosts</span><br><span class="line"></span><br><span class="line">[test]</span><br><span class="line">192.168.1.1</span><br><span class="line">192.168.1.2</span><br><span class="line">192.168.1.3</span><br></pre></td></tr></table></figure></p><p>上面这种配置方式，是需要添加<code>sshkey</code>才可以使用的，这种使用方式更爽一些。</p><h1 id="使用sshpass"><a href="#使用sshpass" class="headerlink" title="使用sshpass"></a>使用sshpass</h1><p>如果想使用用户名密码来配置ansible，也是可以的，一样是需要在<code>hostfile</code>的路径找到<code>hosts</code>文件编辑：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ansible/hosts</span><br><span class="line"></span><br><span class="line">[test]</span><br><span class="line">192.168.1.1 ansible_ssh_user=用户名 ansible_ssh_pass=密码</span><br><span class="line">192.168.1.2 ansible_ssh_user=用户名 ansible_ssh_pass=密码</span><br><span class="line">192.168.1.3 ansible_ssh_user=用户名 ansible_ssh_pass=密码</span><br></pre></td></tr></table></figure></p><h1 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h1><p>无论是使用<code>sshkey</code>还是使用<code>sshpass</code>，都可以使用下面的测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ansible test -m ping</span><br><span class="line"></span><br><span class="line">192.168.1.1 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">192.168.1.2 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">192.168.1.3| SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ansible </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用github做一个类似七牛云的云存储</title>
      <link href="/tech/shi-yong-github-zuo-wen-jian-cun-chu/"/>
      <url>/tech/shi-yong-github-zuo-wen-jian-cun-chu/</url>
      <content type="html"><![CDATA[<h1 id="一、吐槽"><a href="#一、吐槽" class="headerlink" title="一、吐槽"></a>一、吐槽</h1><p>首先我想说一句“日了狗”了不知道过分不过分！<br>前段时间，七牛云发来下面的通知：<br><a id="more"></a><br><img src="https://cdn.qianxunclub.com/yitian_2018-10-31_11-13-00.png" alt=""></p><p>这意味着，我之前所有的使用七牛云的图片域名变了，要修改！要全部修改！！！算了，不说了。  </p><p>消消气，接下来说怎么用抛弃七牛云，使用github吧。</p><h1 id="二、使用github做云存储服务"><a href="#二、使用github做云存储服务" class="headerlink" title="二、使用github做云存储服务"></a>二、使用github做云存储服务</h1><h2 id="2-1-创建云存储的仓库"><a href="#2-1-创建云存储的仓库" class="headerlink" title="2.1 创建云存储的仓库"></a>2.1 创建云存储的仓库</h2><p><img src="https://cdn.qianxunclub.com/1540955860216-0974b4a3-b160-4a1b-bc30-e2b8f59a131b.png" alt=""></p><ul><li>项目名称为<code>xxx.io</code>，貌似现在不加<code>.io</code>也行了，之前是要加的，我只是习惯了</li><li>下面创建<code>README.MD</code>按钮最好点上去，不然空项目，不方便上传图片</li></ul><h2 id="2-2-域名设置"><a href="#2-2-域名设置" class="headerlink" title="2.2 域名设置"></a>2.2 域名设置</h2><ol><li>首先你得有一个域名，我的域名是在<a href="https://aliyun.com" target="_blank" rel="noopener">阿里云</a>买的，要在阿里云域名解析设置正确的解析：<br><img src="https://cdn.qianxunclub.com/yitian_2018-10-31_11-30-57.png" alt=""></li></ol><ul><li>要使用CNAME解析</li><li>解析地址一般是<code>用户名.github.io</code></li></ul><ol start="3"><li>设置github云存储域名，在github仓库创建一个文件名称为<code>CNAME</code>的文件，内容就是自己在阿里云设置解析的域名，提交就可以了：<br><img src="https://cdn.qianxunclub.com/yitian_2018-10-31_11-33-48.png" alt=""><br><img src="https://cdn.qianxunclub.com/yitian_2018-10-31_11-36-12.png" alt=""></li></ol><ol start="3"><li>点击项目设置：<br><img src="https://cdn.qianxunclub.com/yitian_2018-10-31_11-24-37.png" alt=""><br>找到下面<code>GitHub Pages</code>设置，可以看到域名已经设置成功：<br><img src="https://cdn.qianxunclub.com/yitian_2018-10-31_11-26-59.png" alt=""></li></ol><h2 id="2-3-测试和使用"><a href="#2-3-测试和使用" class="headerlink" title="2.3 测试和使用"></a>2.3 测试和使用</h2><p>接下来上传一张图片感觉一下效果：<br><img src="https://cdn.qianxunclub.com/yitian_2018-10-31_11-38-42.png" alt=""><br>上传完成后，访问一下感觉感觉，访问地址是：<code>https://自己的域名.com/文件名称.jpg</code><br><img src="https://cdn.qianxunclub.com/yitian_2018-10-31_11-42-59.png" alt=""></p><p>完美！</p>]]></content>
      
      <categories>
          
          <category> 技术杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 七牛云 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>一份高质量的JAVA高级开发面试题总结，没有答案</title>
      <link href="/tech/gao-zhi-liang-mian-shi-ti/"/>
      <url>/tech/gao-zhi-liang-mian-shi-ti/</url>
      <content type="html"><![CDATA[<blockquote><p>一般面试官都是按照自己的简历面试的，下面的面试题当然也是依据我自己的简历的一些问题总结，我是对一些架构知识比较感兴趣，所以简历比较突出架构方面的。<br>别看人家问的问题很简单，但是你不能简单的回答的，依据自己的能力，能回答多深就多大多深。<br>然后就是看和面试官的缘分了，能碰触火花，那就恭喜了！</p></blockquote><p><img src="http://cdn.qianxunclub.com/yitian_2018-10-23_16-48-00.png" alt=""></p><a id="more"></a><p><strong>1、描述一下不同业务的架构方式和自己觉得比较牛逼的架构。</strong>  <br><br><br><strong>2、在公司自己的角色，工作内容和负责的事项。</strong>  <br><br><br><strong>3、自己觉得对自己提升最大的项目介绍一下，包括业务和技术和协调管理等各个方面。</strong>  <br><br><br><strong>4、jvm内存怎么设置，怎么调优，依据都有哪些。</strong>  <br><br><br><strong>5、threadlocal 介绍一下。</strong>  <br><br><br><strong>6、kafka原理，为什么性能高并且还稳定。</strong>  <br><br><br><strong>7、分布式使用集群的时候，其中一个节点断掉了，处理策略，比如 dubbo ，eureka，grpc等等，主要介绍处理原理。</strong>  <br><br><br><strong>8、分布式事务怎么处理。</strong>  <br><br><br><strong>9、服务器配置和数量怎么协调分配，部署的都是什么服务。</strong>  <br><br><br><strong>10、如何协调项目或者服务之间的关系。</strong>  <br><br><br><strong>11、服务崩溃的原因你都遇到过哪些。</strong>  <br><br><br><strong>12、如何保证服务正常运行，出现错误，怎么修复，监控和快速修复排错方面。</strong>  <br><br><br><strong>13、项目中，有没有遇到测试开发环境都是正常的，生产错误的情况？然后如何找到这个错误的问题，怎么解决这个问题。</strong>  <br><br><br><strong>14、分库分表是用什么工具，如何分的，数据量多少。</strong>  <br><br><br><strong>15、数据库单机还是主从，部署方案，如果宕机处理方式。</strong>  <br><br><br><strong>16、很多后台管理列表查询，没有分库分表字段，怎么处理，全库全表查询太慢。</strong>  <br><br><br><strong>17、读写分离的场景，读写分离不一定是mysql的读写分离，我回答的是mysql写，mongodb读。</strong>  <br><br><br><strong>18、项目中接口最大并发能承受多少。</strong>  <br><br><br><strong>19、如果你来规划淘宝双11，从哪些方面应对该活动。</strong>  <br><br><br><strong>20、做为一个架构师，一套架构怎么产生，流程是什么。</strong>  <br><br><br><strong>21、微服务优缺点，如何应对它的缺点。</strong>  <br><br><br><strong>22、微服务数量庞大起来，如何管理这些服务。</strong>  <br><br><br><strong>23、分布式配置中心的应用。</strong>  <br><br><br><strong>24、说一个自己比较熟悉技术，说说原理，自己能不能开发一个这个产品。</strong>  <br><br><br><strong>25、你的优点是什么，录用你的原因，优势是什么？缺点是什么。</strong>  <br><br><br><strong>26、开发中，有咩有遇到比较奇葩的问题，为什么会有这个问题，如何解决的。</strong>  <br><br><br><strong>27、你对简历上以外的技术还会哪些？对那些比较感兴趣，或者做过什么小demo之类的。</strong>  <br><br><br><strong>28、你对技术方面是如何学习，途径是什么。</strong>  <br><br><br><strong>29、自己觉得呆的这么几个公司，哪个对自己提升最大，为什么，为什么离职？再找工作的目标是什么。</strong>  <br><br><br><strong>30、你给公司带来的最大利益有哪些，或者提供了哪些技术等。</strong>  <br><br></p>]]></content>
      
      <categories>
          
          <category> 技术杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nginx认识nginx.conf配置文件</title>
      <link href="/linux/nginx-pei-zhi-nginx-conf-wen-jian/"/>
      <url>/linux/nginx-pei-zhi-nginx-conf-wen-jian/</url>
      <content type="html"><![CDATA[<p>转载：<a href="https://blog.csdn.net/rth362147773/article/details/78837971" target="_blank" rel="noopener">https://blog.csdn.net/rth362147773/article/details/78837971</a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>nginx.conf文件是放在conf目录下的一个配置文件。这个是Nginx服务器的主配置文件。通过指令来配置这个文件能达到控制nginx，实现反向代理，负载均衡，也是nginx入门的基础。读懂使用nginx.conf文件是这篇文章写作目的。<br><a id="more"></a></p><h1 id="nginx-conf文件的结构"><a href="#nginx-conf文件的结构" class="headerlink" title="nginx.conf文件的结构"></a>nginx.conf文件的结构</h1><p>首先介绍文件的架构，整个conf文件分为 全局块、events块、http块、server块、location块。每个块有每个块的作用域，越外层的块作用域就包含内部块的作用域，如全局块作用域就包含events块、http块、server块和location块。而文件中的“#”代表注析，#后的代码是不会有效果的。修改nginx.conf后是必须重启nginx才会生效。这些要注意。<br>下面就看文件架构：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">...                 #全局块</span><br><span class="line"></span><br><span class="line">event&#123;              #events块</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http&#123;               #http块</span><br><span class="line"></span><br><span class="line">    server&#123;         #server块</span><br><span class="line">        ...         #server全局块</span><br><span class="line"></span><br><span class="line">        location&#123;   #location块</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location&#123;   #location块</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server&#123;         #server块</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...             #http全局块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>大致的nginx.conf文件如上，而下面讲解各块的作用。</p><table><thead><tr><th>名称</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>全局块</td><td style="text-align:left">全局块是默认配置文件从开始到events块之间的一部分内容，主要是设置一些影响Nginx服务器整体运行的配置指令。因此，这些指令的作用域是Nginx服务器全局。作用：配置Ngnix服务器的用户组、worker process数、Nginx进程PID存放路径、日志的存放路径和类型已经配置文件引入等。</td></tr><tr><td>events块</td><td style="text-align:left">events块的指令主要影响Nginx服务器与用户的网络链接。 作用：是否开启多worker process下的网络连接进行序列化，是否允许同时接收多个网络连接，选取那种事件驱动模型处连接请求，每个worker process可以同时支持的最大连接数等。</td></tr><tr><td>http块</td><td style="text-align:left">http块是Nginx服务器配置中的重要部分，代理、缓存和日志定义等绝大多数的功能和第三方模块的配置都可以放在这模块中。作用包括：文件引入、MIME-Type定义、日志自定义、是否使用sendfile传输文件、连接超时时间、单连接请求数上限等。</td></tr><tr><td>server块</td><td style="text-align:left">server块，虚拟主机（虚拟服务器）。作用：使得Nginx服务器可以在同一台服务器上至运行一组Nginx进程，就可以运行多个网站。</td></tr><tr><td>location块</td><td style="text-align:left">location块是server块的一个指令。作用：基于Nginx服务器接收到的请求字符串，虚拟主机名称（ip，域名）、url匹配，对特定请求进行处理。</td></tr></tbody></table><h1 id="指令说明"><a href="#指令说明" class="headerlink" title="指令说明"></a>指令说明</h1><p>日常我们使用到的配置如下，这些都是常用的指令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">#### 全局块 开始 ####</span><br><span class="line">user nobody nobody;                 #配置允许运行nginx服务器的用户和用户组</span><br><span class="line">worker_processes 3;                 #配置允许nginx进程生产的worker process数</span><br><span class="line">error_log logs/error.log;           #配置nginx服务器运行对错误日志存放路径</span><br><span class="line">pid nginx.pid;                      #配置nginx服务器运行时的pid文件存放路径和名称</span><br><span class="line">#### 全局块 结束 ####</span><br><span class="line"></span><br><span class="line">#### events块 开始 ####</span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line">    ues epoll;                      #配置事件驱动模型</span><br><span class="line">    worker_connections 1024;        #配置最大连接数</span><br><span class="line">&#125;</span><br><span class="line">#### events块 结束 ####</span><br><span class="line"></span><br><span class="line">#### http块 开始 ####</span><br><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line">    include mime.types;             #定义MIME-Type</span><br><span class="line">    default_type application/octet-stream;   </span><br><span class="line">    sendfile on；                   #配置允许使用sendfile方式传输</span><br><span class="line">    keepalive_timeout 65;           #配置连接超时时间</span><br><span class="line">    log_format access.log &apos;$remote_addr-[$time_local]-&quot;$request&quot;-&quot;$http_user_agent&quot;&apos;;     #配置请求处理日志的格式</span><br><span class="line"></span><br><span class="line">    #### server块 开始 ####</span><br><span class="line">    ##配置虚拟主机 myServerl</span><br><span class="line">    server</span><br><span class="line">    &#123;</span><br><span class="line">        listen  8081;              #配置监听端口和主机名称</span><br><span class="line">        server_name myServer1;</span><br><span class="line"></span><br><span class="line">        access_log  /myweb/server1/logaccess.log;#配置请求处理日志存放路径</span><br><span class="line">        error_page 404  /404.html;     #配置错误页面</span><br><span class="line"></span><br><span class="line">        location  /server1/location1 &#123; #配置处理／server1/location1 请求的location</span><br><span class="line">            root  /myweb;</span><br><span class="line">            index index.svr1-loc1.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location  /server1/location2 &#123; #配置处理／server1/location2 请求的location</span><br><span class="line">            root  /myweb;</span><br><span class="line">            index index.svr1-loc2.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server</span><br><span class="line">    &#123;</span><br><span class="line">        listen  8082;</span><br><span class="line">        server_name  192.168.1.3;</span><br><span class="line">        access_log  /myweb/server2/log/access.log;</span><br><span class="line">        error_log  404  /404.html;    #对错误页面404.html 做了定向配置</span><br><span class="line">        location  /server2/location1 </span><br><span class="line">        &#123;</span><br><span class="line">            root  /myweb;</span><br><span class="line">            index index.svr2-loc1.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location  /svr2/loc2 </span><br><span class="line">        &#123;</span><br><span class="line">            alias  /myweb/server2/location2;       #对location的URL进行更改</span><br><span class="line">            index index.svr2-loc1.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location = ／404.html                  #配置错误页面转向</span><br><span class="line">        &#123;</span><br><span class="line">            root  /myweb/;</span><br><span class="line">            index 404.html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    #### server块 结束 ####</span><br><span class="line">&#125;</span><br><span class="line">### http块 结束 ####</span><br></pre></td></tr></table></figure><table><thead><tr><th>指令</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>user user [group]</td><td style="text-align:left">用于配置允许Nginx服务器用户（组）。user,指可以运行Nginx服务器的用户。group，指可以运行Nginx服务器的用户组。通常设置：user nobody nobody</td></tr><tr><td>worker process number/auto</td><td style="text-align:left">Nginx服务器实现并发处理服务关键，设置值越大并发处理量也就越多，但也受到软硬件制约。number,指Nginx进程最多可以产生worker process数。auto,Nginx进程自动检测。默认设置为1。</td></tr><tr><td>pid file</td><td style="text-align:left">Nginx进程作为系统的守护进程运行，我们需要在某文件中保存当前运行程序的主进程号。Nginx支持对它的存放路径进行自定义配置，指令时pid。如pid sbin／web_nginx</td></tr><tr><td>error_log file</td><td style="text-align:left">配置错误日志存放路径，全局块、http块和server块中都可以对日志进行相关配置。如：error_log logs/error.log error</td></tr><tr><td>incloud file</td><td style="text-align:left">配置文件的引入，引入其他Nginx配置或者第三方模块的配置。如：include mime.types</td></tr><tr><td>accept_mutex on/off</td><td style="text-align:left">设置网络连接的序列化，当某一个时刻只有一个网络连接来时，多个睡眠进程会被同时叫醒，但只有一个进程能接。如果每次呼醒的进程数目太多，会影响一部分系统性能。为了解决这个问题，Nginx配置accept_mutex，当开启的时候，对Nginx进程接收连接进行序列化，防止多个进程对连接的争强。只能在events块配置。</td></tr><tr><td>accept_accept on/off</td><td style="text-align:left">设置是否允许同时接收多个网络连接，这个是配置worker process是否允许同时接收多个连接。</td></tr><tr><td>use method</td><td style="text-align:left">事件驱动模型选择，强制Nginx服务器选择那种事件驱动模型进行消息处理。method:select、poll、kqueue、epoll、rtsig、／dev／poll 以及eventport。此指令智能在events块中配置。</td></tr><tr><td>woker_connections number</td><td style="text-align:left">配置最大连接数，设置允许每一个worker process同时开启的最大连接数。默认为512。只能在events块中配置。</td></tr><tr><td>default_type mime-type</td><td style="text-align:left">在浏览器中，显示内容HTML、XML、GIF和Flash等种类繁多的文本、媒体等资源，浏览器为了区分这些资源，需要使用MIME Type。MIME Type是网络资源的媒体类型。Nginx服务器作为Web服务器，必须能够识别前端请求的资源类型。配置如：include mime.types; default_type application/octet-stream;在http块、server块或者location块进行配置。</td></tr><tr><td>access_log path[format[buffer=size]]</td><td style="text-align:left">服务日志定义，此处定义所指日志与常规的不同，记录Nginx服务器提供服务过程应答前端请求的日志。可以对服务日志进行格式定义。配置如：log_format exampleLog ‘remoteaddr−[remoteaddr−[remote_addr - [time_local] requestrequestrequest status bodybytessentbodybytessentbody_bytes_sent http_referer $http_user_agent’输出：192.168.1.102 - [31/Oct/2011:20:41:29 +0800] “GET/HTTP/1.1” 200 151 “-” “Mozilla/5.0(compatible;MSIE 10.0;Window NT 6.2; Trident/6.0)”</td></tr><tr><td>sendfile on/off</td><td style="text-align:left">配置允许sendfile方式传输文件，在Apache、lighttd等Web服务器配置中，都有和sendfile相关的配置。用于开启或者关闭sendfile传输文件。默认为off。在http块、server块或者location块进行配置。</td></tr><tr><td>sendfile_max_chunk size</td><td style="text-align:left">worker process每次调用sendfile传输的数据量最大不能超过这个值。默认为0。在http块、server块或location块中配置。和sendfile指令一起使用。</td></tr><tr><td>keepalive_timeout timeout[header_timeout]</td><td style="text-align:left">配置连接超时时间，与用户建立会话连接后，Nginx服务器保持这些连接打开一段时间。此指令设置时间。timeout,服务器端对连接的保持时间。默认值为75s。header_tiemout,可选项，在应答报文头部Keep-Alive域设置超时时间。该指令被Mozilla或者Konqueror识别。配置如：keepalive_timeout 120s 100s;此指令在http块、server块或location块中配置。</td></tr><tr><td>keepalive_requests number</td><td style="text-align:left">单连接请求数上限，用户端和服务端建立连接后，用于限制用户通过某一连接向Nginx服务器发送请求的次数。在server块和location块中，默认设置100。</td></tr><tr><td>listen address[:port][default_server][setfib=number][backlog=number][rcvbuf=size][sndbuf=size][deferred]</td><td style="text-align:left">配置监听使用指令listen。address,IP地址，如果有IPv6的地址，需要使用中括号“[]”括起来，比如[fe80::1]等port,端口号，如果只定义IP地址没有定义端口号，就使用80端口。path，socket文件路径，如／var/run/nginx.sock等default_server，标识符，将此虚拟主机设置为address:port的默认主机。配置如：listen :80 / :8000;listen 192.168.1.10:8000;listen 192.168.1.10;listen 8000;listen 192.168.1.10 default_server backlog=1024;</td></tr><tr><td>server_name name…</td><td style="text-align:left">基于名称的虚拟主机配置，主机指server块虚拟主机。设置主机名称并配置号DNS，用户就可以使用这个名词向此虚拟主机请求了。配置如：server_name myserver.com <a href="http://www.myserver.com" target="_blank" rel="noopener">www.myserver.com</a></td></tr><tr><td>location [ = / ~ / ~* / ^~ ] url</td><td style="text-align:left">配置location，匹配成功，就继续执行下面命令。”=”,用于标准url前,要求请求字符串与url严格匹配。”～”,用于表示URL包含正则表达式，并且区分大小写。”～*”,用于表示url包含正则表达式，并且不区分大小写。”^~”,用于标准url前，用于匹配请求最高location后，立即使用localtion处理请求。</td></tr><tr><td>root path</td><td style="text-align:left">配置请求的根目录，在服务端指定目录中请求资源。</td></tr><tr><td>alias path</td><td style="text-align:left">更改location的URL，使用alias指令改变location接收的URL的请求路径。配置如：alias ／locationtest1/other／$1</td></tr><tr><td>index file …</td><td style="text-align:left">设置网站的默认首页，用于index设置为默认首页。配置如：index index.$1.html index.my.html index.html</td></tr><tr><td>error_page code … [=[response]] url</td><td style="text-align:left">设置网站的错误页面，如果服务端错误需要错误页面来显示。这个设置错误页面。配置如：error_page 404 404/html</td></tr><tr><td>allow address/CIDR/all</td><td style="text-align:left">基于IP配置Nginx的访问权限，通过IP来判断客户端是否拥有对Nginx的访问权限。address，允许访问的客户端的IP，不支持同时设置多个。需要重复使用allow指令。CIDR，允许访问的客户端CIDR地址，例如202.80.18.23/25。all，代表允许所有客户端访问。配置如：deny 192.168.1.1；allow 192.168.1.0/24  deny all；</td></tr><tr><td>auth_basic string/off</td><td style="text-align:left">基于密码配置Nginx的访问权限，该给予HTTP Basic Authentication协议的认证。该协议是一种HTTP性质的认证办法，需要识别用户名和密码，认证失败的苦户端不拥有访问Nginx服务器权限。</td></tr><tr><td>auth_basic_user_file file</td><td style="text-align:left">用语设置包含用户名和密码信息的文件路径。file为密码文件的绝对路径。file配置如：name1:password1</td></tr></tbody></table><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>通过指令的实例和指令的详细说明，可以学会看nginx.conf。nginx虽然容易使用，但想使用的好。需要了解指令的用法。最后才可以实现高性能服务器。</p>]]></content>
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot使用elasticsearch异常：NoSuchMethodError:org.jboss.netty.channel.socket.nio.NioWorker</title>
      <link href="/exception/springboot-elasticsearch-qi-dong-yi-chang/"/>
      <url>/exception/springboot-elasticsearch-qi-dong-yi-chang/</url>
      <content type="html"><![CDATA[<h1 id="异常描述"><a href="#异常描述" class="headerlink" title="异常描述"></a>异常描述</h1><ol><li>使用的SpringBoot1.5.9版本</li><li>JDK1.8</li><li>使用了dubbo和zookeeper</li></ol><a id="more"></a><p>详细报错信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &apos;elasticsearchTemplate&apos; defined in class path resource [org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchDataAutoConfiguration.class]: Unsatisfied dependency expressed through method &apos;elasticsearchTemplate&apos; parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;elasticsearchClient&apos; defined in class path resource [org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.Client]: Factory method &apos;elasticsearchClient&apos; threw exception; nested exception is java.lang.NoSuchMethodError: org.jboss.netty.channel.socket.nio.NioWorker.&lt;init&gt;(Ljava/util/concurrent/Executor;Lorg/jboss/netty/util/ThreadNameDeterminer;)V</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)</span><br><span class="line">at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)</span><br><span class="line">... 33 common frames omitted</span><br><span class="line">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;elasticsearchClient&apos; defined in class path resource [org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.Client]: Factory method &apos;elasticsearchClient&apos; threw exception; nested exception is java.lang.NoSuchMethodError: org.jboss.netty.channel.socket.nio.NioWorker.&lt;init&gt;(Ljava/util/concurrent/Executor;Lorg/jboss/netty/util/ThreadNameDeterminer;)V</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)</span><br><span class="line">at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)</span><br><span class="line">... 43 common frames omitted</span><br><span class="line">Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.Client]: Factory method &apos;elasticsearchClient&apos; threw exception; nested exception is java.lang.NoSuchMethodError: org.jboss.netty.channel.socket.nio.NioWorker.&lt;init&gt;(Ljava/util/concurrent/Executor;Lorg/jboss/netty/util/ThreadNameDeterminer;)V</span><br><span class="line">at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)</span><br><span class="line">... 56 common frames omitted</span><br><span class="line">Caused by: java.lang.NoSuchMethodError: org.jboss.netty.channel.socket.nio.NioWorker.&lt;init&gt;(Ljava/util/concurrent/Executor;Lorg/jboss/netty/util/ThreadNameDeterminer;)V</span><br><span class="line">at org.jboss.netty.channel.socket.nio.NioWorkerPool.newWorker(NioWorkerPool.java:44)</span><br><span class="line">at org.jboss.netty.channel.socket.nio.NioWorkerPool.newWorker(NioWorkerPool.java:28)</span><br><span class="line">at org.jboss.netty.channel.socket.nio.AbstractNioWorkerPool.init(AbstractNioWorkerPool.java:80)</span><br><span class="line">at org.jboss.netty.channel.socket.nio.NioWorkerPool.&lt;init&gt;(NioWorkerPool.java:39)</span><br><span class="line">at org.jboss.netty.channel.socket.nio.NioWorkerPool.&lt;init&gt;(NioWorkerPool.java:33)</span><br><span class="line">at org.elasticsearch.transport.netty.NettyTransport.createClientBootstrap(NettyTransport.java:354)</span><br><span class="line">at org.elasticsearch.transport.netty.NettyTransport.doStart(NettyTransport.java:290)</span><br><span class="line">at org.elasticsearch.common.component.AbstractLifecycleComponent.start(AbstractLifecycleComponent.java:68)</span><br><span class="line">at org.elasticsearch.transport.TransportService.doStart(TransportService.java:182)</span><br><span class="line">at org.elasticsearch.common.component.AbstractLifecycleComponent.start(AbstractLifecycleComponent.java:68)</span><br><span class="line">at org.elasticsearch.client.transport.TransportClient$Builder.build(TransportClient.java:164)</span><br><span class="line">at org.springframework.data.elasticsearch.client.TransportClientFactoryBean.buildClient(TransportClientFactoryBean.java:89)</span><br><span class="line">at org.springframework.data.elasticsearch.client.TransportClientFactoryBean.afterPropertiesSet(TransportClientFactoryBean.java:85)</span><br><span class="line">at org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration.createTransportClient(ElasticsearchAutoConfiguration.java:116)</span><br><span class="line">at org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration.createClient(ElasticsearchAutoConfiguration.java:93)</span><br><span class="line">at org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration.elasticsearchClient(ElasticsearchAutoConfiguration.java:84)</span><br><span class="line">at org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration$$EnhancerBySpringCGLIB$$68f5928b.CGLIB$elasticsearchClient$1(&lt;generated&gt;)</span><br><span class="line">at org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration$$EnhancerBySpringCGLIB$$68f5928b$$FastClassBySpringCGLIB$$5550a67a.invoke(&lt;generated&gt;)</span><br><span class="line">at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)</span><br><span class="line">at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)</span><br><span class="line">at org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration$$EnhancerBySpringCGLIB$$68f5928b.elasticsearchClient(&lt;generated&gt;)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)</span><br><span class="line">... 57 common frames omitted</span><br></pre></td></tr></table></figure></p><h1 id="异常分析"><a href="#异常分析" class="headerlink" title="异常分析"></a>异常分析</h1><p>从异常的信息看，有两种可能：</p><ol><li>没有netty包的原因</li><li>有多个netty包出现冲突</li></ol><p>先找一下有没有netty包，找了一遍，发现有netty的<br><img src="http://p8wysinsm.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180824092833.png" alt=""></p><p>那只有第二种可能了，就是包冲入，又仔细看了一遍引入的JAR包，果然又出现了一个jar<br><img src="http://p8wysinsm.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180824093129.png" alt=""></p><p>然后挨个挨个查找，发现是dubbo和zookeeper里面已经有了netty包了，所以出现了包冲突。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>出错原因是Elasticsearch的netty包和dubbo、zookeeper里面的netty包冲突，我这里是排除了dubbo、zookeeper里面的netty包:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba.spring.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;dubbo-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;dubbo.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;exclusions&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring&lt;/artifactId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">&lt;artifactId&gt;netty&lt;/artifactId&gt;</span><br><span class="line">&lt;groupId&gt;org.jboss.netty&lt;/groupId&gt;</span><br><span class="line">&lt;/exclusion&gt;</span><br><span class="line">    &lt;/exclusions&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.101tec&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;zkclient&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;zkClient.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;zookeeper&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;zookeeper.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;exclusions&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;groupId&gt;log4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;log4j&lt;/artifactId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;groupId&gt;io.netty&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;netty&lt;/artifactId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">    &lt;/exclusions&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>启动，成功！</p>]]></content>
      
      <categories>
          
          <category> 异常记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exception </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> Elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot启动使用elasticsearch启动异常：Received message from unsupported version:[2.0.0] minimal compatible version is:[5.6.0]</title>
      <link href="/exception/springboot-elasticsearch-yi-chang/"/>
      <url>/exception/springboot-elasticsearch-yi-chang/</url>
      <content type="html"><![CDATA[<h1 id="异常描述"><a href="#异常描述" class="headerlink" title="异常描述"></a>异常描述</h1><ol><li>使用的SpringBoot1.5.9版本</li><li>JDK1.8</li><li>使用了dubbo和zookeeper</li><li>elasticsearch使用的6.3.2版本</li><li>引入ES的jar包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.data&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-data-elasticsearch&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><p>ES详细报错信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[2018-08-23T15:56:05,004][WARN ][o.e.x.s.t.n.SecurityNetty4ServerTransport] [node-1] exception caught on transport layer [NettyTcpChannel&#123;localAddress=/192.168.1.40:9300, remoteAddress=/192.168.1.150:55594&#125;], closing connection</span><br><span class="line">java.lang.IllegalStateException: Received message from unsupported version: [2.0.0] minimal compatible version is: [5.6.0]</span><br><span class="line">        at org.elasticsearch.transport.TcpTransport.ensureVersionCompatibility(TcpTransport.java:1462) ~[elasticsearch-6.3.2.jar:6.3.2]</span><br><span class="line">        at org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:1409) ~[elasticsearch-6.3.2.jar:6.3.2]</span><br><span class="line">        at org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:64) ~[transport-netty4-6.3.2.jar:6.3.2]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310) [netty-codec-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297) [netty-codec-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413) [netty-codec-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) [netty-codec-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241) [netty-handler-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:545) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459) [netty-transport-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) [netty-common-4.1.16.Final.jar:4.1.16.Final]</span><br><span class="line">        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_181]</span><br></pre></td></tr></table></figure></p><h1 id="异常分析"><a href="#异常分析" class="headerlink" title="异常分析"></a>异常分析</h1><p>错误信息写的是因为版本不一致的原因导致的，客户端使用的2.0.0版本，要求最低是5.6.0版本的，然后各种百度各种查啊，原因如下：<br>springboot我用的版本是SpringBoot1.5.9，然后引入的<code>spring-data-elasticsearch</code>里面包含的es版本是<code>2.4.0</code>的。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>解决办法有两种，1：重新安装ES版本，安装2.0.0版本的。 2：升级自己的SpringBoot。<br>我这里因为是新系统，为了代码规范，所以就安装了ES2.0.0版本了，但是我感觉最好的解决办法应该要升级SpringBoot版本才对。</p>]]></content>
      
      <categories>
          
          <category> 异常记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exception </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> Elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>centos系统的elasticsearch安装</title>
      <link href="/tech/elasticsearch-install/"/>
      <url>/tech/elasticsearch-install/</url>
      <content type="html"><![CDATA[<p>安装2.0.0的elasticsearch服务，项目是依赖spring-boot<code>1.5.9.RELEASE</code>版本，指定了elasticsearch版本，否则无法使用</p><a id="more"></a><table><thead><tr><th>spring data elasticsearch</th><th>elasticsearch</th></tr></thead><tbody><tr><td>3.0.0.RC2</td><td>5.5.0</td></tr><tr><td>3.0.0.M4</td><td>5.4.0</td></tr><tr><td>2.0.4.RELEASE</td><td>2.4.0</td></tr><tr><td>2.0.0.RELEASE</td><td>2.2.0</td></tr><tr><td>1.4.0.M1</td><td>1.7.3</td></tr><tr><td>1.3.0.RELEASE</td><td>1.5.2</td></tr><tr><td>1.2.0.RELEASE</td><td>1.4.4</td></tr><tr><td>1.1.0.RELEASE</td><td>1.3.2</td></tr><tr><td>1.0.0.RELEASE</td><td>1.1.1</td></tr></tbody></table><h1 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h1><ol><li>JDK1.8以上  </li><li><p>创建elasticsearch用户  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd elsearch</span><br><span class="line">useradd elsearch -g elsearch</span><br></pre></td></tr></table></figure></li><li><p>提高系统线程数  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/security/limits.conf</span><br><span class="line"></span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 2048</span><br><span class="line">* hard nproc 4096</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/security/limits.d/90-nproc.conf </span><br><span class="line"></span><br><span class="line">* soft nproc 2048</span><br></pre></td></tr></table></figure><p>否则会出现错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</span><br></pre></td></tr></table></figure></p><ol start="4"><li>提高系统变量数量  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">添加或者修改：</span><br><span class="line">vm.max_map_count=655360</span><br><span class="line"></span><br><span class="line">立即生效：</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></li></ol><p>否则出现以下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br></pre></td></tr></table></figure></p><h1 id="elasticsearch安装"><a href="#elasticsearch安装" class="headerlink" title="elasticsearch安装"></a>elasticsearch安装</h1><ol><li><p>使用新创建的<code>elsearch</code>用户  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su elsearch</span><br></pre></td></tr></table></figure></li><li><p>下载<code>2.0.0</code>的elasticsearch包，因为程序使用的是spring-boot<code>1.5.9.RELEASE</code>版本，所以使用elasticsearch的<code>2.0.0</code>版本，否则无法启动<br>如果使用的是其他版本的springboot，需要按照代码版本使用不同版本的elasticsearch服务<br>下载地址：<a href="https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0" target="_blank" rel="noopener">https://www.elastic.co/downloads/past-releases/elasticsearch-2-0-0</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/zip/elasticsearch/2.0.0/elasticsearch-2.0.0.zip</span><br><span class="line"></span><br><span class="line">unzip elasticsearch-2.0.0.zip</span><br></pre></td></tr></table></figure></li><li><p>给目录授权<br>使用root用户给ES目录授权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R elsearch:elsearch elasticsearch-2.0.0/</span><br></pre></td></tr></table></figure></li><li><p>修改ES配置  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd elasticsearch-2.0.0</span><br><span class="line"></span><br><span class="line">vim config/elasticsearch.yml</span><br></pre></td></tr></table></figure></li></ol><p>主要修改一下几项：</p><ul><li>cluster.name: my-application：集群名称</li><li>node.name: node-1：当前节点名称</li><li>path.data: /home/elsearch/data：数据存放目录</li><li>path.logs: /home/elsearch/logs：日志存放目录</li><li>bootstrap.mlockall: false：centos系统需要修改，否则报错如下</li><li>bootstrap.system_call_filter: false：centos用户需要添加，否则报错如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR: bootstrap checks failed</span><br><span class="line">system call filters failed to install; check the logs and fix your configuration or disable system call filters at your own risk</span><br></pre></td></tr></table></figure></li></ul><p>因为Centos6不支持SecComp，而ES5.2.1默认bootstrap.system_call_filter为true进行检测，所以导致检测失败，失败后直接导致ES不能启动。</p><ul><li>network.host: 192.168.1.40：修改为当前服务器IP</li><li>http.port: 9200：ES服务API端口号</li><li>添加跨域请求：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: /.*/</span><br></pre></td></tr></table></figure></li></ul><h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1><p>使用<code>elsearch</code>用户启动一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd elasticsearch-2.0.0</span><br><span class="line"></span><br><span class="line">./bin/elasticsearch</span><br></pre></td></tr></table></figure></p><p>如果出现<code>started</code>字样，说明启动成功  </p><p>然后使用下面启动方式，为后台启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch -d</span><br></pre></td></tr></table></figure></p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>浏览器访问：<code>http://192.168.1.40:9200</code>，出现一下为成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    name: &quot;node-1&quot;,</span><br><span class="line">    cluster_name: &quot;my-application&quot;,</span><br><span class="line">    version: &#123;</span><br><span class="line">        number: &quot;2.0.0&quot;,</span><br><span class="line">        build_hash: &quot;de54438d6af8f9340d50c5c786151783ce7d6be5&quot;,</span><br><span class="line">        build_timestamp: &quot;2015-10-22T08:09:48Z&quot;,</span><br><span class="line">        build_snapshot: false,</span><br><span class="line">        lucene_version: &quot;5.2.1&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    tagline: &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 技术杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Elasticsearch </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>fastdfs第一次上传文件报错recv package size -1!=10</title>
      <link href="/exception/fastdfs-recv-package-size/"/>
      <url>/exception/fastdfs-recv-package-size/</url>
      <content type="html"><![CDATA[<h1 id="异常描述"><a href="#异常描述" class="headerlink" title="异常描述"></a>异常描述</h1><p> <strong>项目版本：</strong><br>项目是<code>SpringBoot</code>的<code>1.5.9-release</code>版本，fastdfs版本如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.arccode<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.27.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p> <strong>调用方式如下：</strong><br>我的<code>fastdfs.conf</code>配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">connect_timeout = 10</span><br><span class="line">network_timeout = 30</span><br><span class="line">charset = UTF-8</span><br><span class="line">tracker_service = xxx.xxx.xxx.xxx:xxx</span><br></pre></td></tr></table></figure></p><p>java调用：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileManage</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TrackerClient trackerClient;</span><br><span class="line">    <span class="keyword">private</span> TrackerService trackerService;</span><br><span class="line">    <span class="comment">//初始化dfs</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FileManage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ClientGlobal.init(<span class="string">"fastdfs.conf"</span>);</span><br><span class="line">        trackerClient = <span class="keyword">new</span> TrackerClient(ClientGlobal.g_tracker_group);</span><br><span class="line">        trackerService = trackerClient.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//文件上传</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">upload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StorageClient storageClient = <span class="keyword">new</span> StorageClient(trackerService,<span class="keyword">null</span>);</span><br><span class="line">        storageClient.upload_file(.....);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> <strong>报错情况：</strong><br>每次刚启动服务，如果没有直接使用，过一段时间，再调用上传文件服务，会报错，但是再次上传，就没事了，又正常了，报错信息如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">java.io.IOException: recv package size -1 != 10</span><br><span class="line">        at org.csource.fastdfs.ProtoCommon.recvHeader(ProtoCommon.java:206)</span><br><span class="line">        at org.csource.fastdfs.ProtoCommon.recvPackage(ProtoCommon.java:242)</span><br><span class="line">        at org.csource.fastdfs.TrackerClient.getStoreStorage(TrackerClient.java:143)</span><br><span class="line">        at org.csource.fastdfs.StorageClient.newWritableStorageConnection(StorageClient.java:1912)</span><br><span class="line">        at org.csource.fastdfs.StorageClient.do_upload_file(StorageClient.java:702)</span><br><span class="line">        at org.csource.fastdfs.StorageClient.upload_file(StorageClient.java:207)</span><br><span class="line">        at org.csource.fastdfs.StorageClient.upload_file(StorageClient.java:225)</span><br><span class="line">        at org.csource.fastdfs.StorageClient1.upload_file1(StorageClient1.java:112)</span><br></pre></td></tr></table></figure></p><h1 id="异常分析"><a href="#异常分析" class="headerlink" title="异常分析"></a>异常分析</h1><p>经过多次验证重现这个错误，发现刚启动，间隔时间30秒，就会报错，不能上传，目测和<code>fastdfs.conf</code>配置的<code>network_timeout =30</code>有关系。<br>然后各种百度谷歌，发现有这么一句话：<strong>如果客户端服务启动，成功链接到dfs服务器，如果在network_timeout时间内，dfs服务没有接收到任何请求信息，会吧这个客户端踢掉！</strong><br>日了，为毛要踢掉，我还要用啊，看来每次启动链接成功都需要给dfs服务发送点什么才行！</p><p>对dfs有研究了一波，发现<code>fastdfs-client-java</code>包到<a href="https://github.com/happyfish100/fastdfs-client-java/blob/master/src/main/java/org/csource/fastdfs/ProtoCommon.java" target="_blank" rel="noopener">ProtoCommon.java</a>本来已经提供了一个发送信息到一个方法，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">activeTest</span><span class="params">(Socket sock)</span></span></span><br></pre></td></tr></table></figure></p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>废话不多少，先试一波，修改上面dfs初始化代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileManage</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TrackerClient trackerClient;</span><br><span class="line">    <span class="keyword">private</span> TrackerService trackerService;</span><br><span class="line">    <span class="comment">//初始化dfs</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FileManage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ClientGlobal.init(<span class="string">"fastdfs.conf"</span>);</span><br><span class="line">        trackerClient = <span class="keyword">new</span> TrackerClient(ClientGlobal.g_tracker_group);</span><br><span class="line">        trackerService = trackerClient.getConnection();</span><br><span class="line">        <span class="comment">//给dfs发送一个消息</span></span><br><span class="line">        ProtoCommon.activeTest(trackerService.getSocket());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//文件上传</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">upload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StorageClient storageClient = <span class="keyword">new</span> StorageClient(trackerService,<span class="keyword">null</span>);</span><br><span class="line">        storageClient.upload_file(.....);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>启动项目，等30秒以上，测试，成功！    </p><p><em>卧槽，终于记录完了，公司电脑不能上网，上面所有代码纯手工写的，累死！</em></p>]]></content>
      
      <categories>
          
          <category> 异常记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exception </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>程序员必备开发工具，提高开发效率的神兵利器，大多都是免费的哦</title>
      <link href="/tech/cheng-xu-yuan-bi-bei-kai-fa-gong-ju-ti-gao-gong-zuo-xiao-lv/"/>
      <url>/tech/cheng-xu-yuan-bi-bei-kai-fa-gong-ju-ti-gao-gong-zuo-xiao-lv/</url>
      <content type="html"><![CDATA[<h1 id="1、IntelliJ-IDEA"><a href="#1、IntelliJ-IDEA" class="headerlink" title="1、IntelliJ IDEA"></a><a href="http://www.jetbrains.com/idea/" target="_blank" rel="noopener">1、IntelliJ IDEA</a></h1><p>这个就不用多说了，地球人都在用，很好的开发工具，并且插件齐全，更牛逼的是支持各种语言开发。  </p><p>官网地址：<a href="http://www.jetbrains.com/idea/" target="_blank" rel="noopener">http://www.jetbrains.com/idea/</a><br>注册码地址：<a href="http://idea.lanyus.com/" target="_blank" rel="noopener">http://idea.lanyus.com/</a><br><a id="more"></a></p><h1 id="2、DataGrip数据库客户端管理"><a href="#2、DataGrip数据库客户端管理" class="headerlink" title="2、DataGrip数据库客户端管理"></a><a href="https://www.jetbrains.com/datagrip/" target="_blank" rel="noopener">2、DataGrip数据库客户端管理</a></h1><p><img src="http://cdn.qianxunclub.com/query-console.png" alt=""></p><p><a href="http://www.navicat.com.cn/" target="_blank" rel="noopener">Navicat</a>其实是更好的一个数据库客户端管理工具，但是收费，很麻烦，就又找了一个，也是比较好用的，DataGrip也是<a href="http://www.jetbrains.com/idea/" target="_blank" rel="noopener">IntelliJ IDEA</a>中的一个工具。  </p><p>官网地址：<a href="https://www.jetbrains.com/datagrip/" target="_blank" rel="noopener">https://www.jetbrains.com/datagrip/</a><br>注册码地址：<a href="http://idea.lanyus.com/" target="_blank" rel="noopener">http://idea.lanyus.com/</a> </p><h1 id="3、Postman接口测试"><a href="#3、Postman接口测试" class="headerlink" title="3、Postman接口测试"></a><a href="https://www.getpostman.com/postman" target="_blank" rel="noopener">3、Postman接口测试</a></h1><p><img src="http://cdn.qianxunclub.com/Postman-most-complete-toolchain%20%281%29.png" alt=""></p><p>这个是在开发中，经常测试RestfulApi接口使用的，并非专业接口测试用具，开发阶段使用是一个特别好的工具,可以设置各种请求方式，并且大多已经提供下拉框了，不用手打了，必须推荐。</p><p>官网地址：<a href="https://www.getpostman.com/postman" target="_blank" rel="noopener">https://www.getpostman.com/postman</a>  </p><h1 id="4、有道云笔记"><a href="#4、有道云笔记" class="headerlink" title="4、有道云笔记"></a><a href="http://note.youdao.com/noteintro.html" target="_blank" rel="noopener">4、有道云笔记</a></h1><p><img src="http://cdn.qianxunclub.com/banner3-1.png" alt=""></p><p>云笔记各种产品很多，我比较钟爱有道云笔记，支持分类，加密，markdown，手机版等好多功能，并且初始内存也是比较大的，3G的，写笔记够写一辈子了。</p><p>官网地址：<a href="http://note.youdao.com/noteintro.html" target="_blank" rel="noopener">http://note.youdao.com/noteintro.html</a></p><h1 id="5、Microsoft-VS-Code（vscode）"><a href="#5、Microsoft-VS-Code（vscode）" class="headerlink" title="5、Microsoft VS Code（vscode）"></a><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">5、Microsoft VS Code（vscode）</a></h1><p><img src="http://cdn.qianxunclub.com/home-screenshot-win-lg.png" alt=""></p><p>文本编辑器很重要，要选好，作为一名优秀的码农，<a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">notepad</a>显然已经满足不了，文本编辑器，一定要轻量级的，速度快的，还要功能多的，<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">vscode</a>是最好的选择了。</p><p>官网地址：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h1 id="6、cmder"><a href="#6、cmder" class="headerlink" title="6、cmder"></a><a href="http://cmder.net/" target="_blank" rel="noopener">6、cmder</a></h1><p><img src="http://cdn.qianxunclub.com/QQ%E6%88%AA%E5%9B%BE20180704155832.png" alt=""></p><p>赶紧告别Windows自带的cmd把，<a href="http://cmder.net/" target="_blank" rel="noopener">cmder</a>是在是强大的一批，不要想别的了，赶紧下载使用把。</p><p>官网地址：<a href="http://cmder.net/" target="_blank" rel="noopener">http://cmder.net/</a></p><h1 id="7、MobaXterm"><a href="#7、MobaXterm" class="headerlink" title="7、MobaXterm"></a><a href="https://mobaxterm.mobatek.net/" target="_blank" rel="noopener">7、MobaXterm</a></h1><p><img src="http://cdn.qianxunclub.com/MobaXterm.png" alt=""></p><p>这个玩意就厉害了，SSH、FTP等管理工具，重要的是免费已经足够使用了，功能齐全，不用在为其他工具收费烦恼了。</p><p>官网地址：<a href="https://mobaxterm.mobatek.net/" target="_blank" rel="noopener">https://mobaxterm.mobatek.net/</a></p><h1 id="8、WPS-Office"><a href="#8、WPS-Office" class="headerlink" title="8、WPS Office"></a><a href="http://2019.docer.com/" target="_blank" rel="noopener">8、WPS Office</a></h1><p><img src="http://cdn.qianxunclub.com/img1-bg.png" alt=""></p><p>说真的，已经彻底放弃微软的Office了，谁用谁恶心，还是WPS比较良心，而且现在2019版本的更强大，支持各种画图，太漂亮了。</p><p>官网地址：<a href="http://2019.docer.com/" target="_blank" rel="noopener">http://2019.docer.com/</a></p><h1 id="9、Everything"><a href="#9、Everything" class="headerlink" title="9、Everything"></a><a href="http://www.voidtools.com/" target="_blank" rel="noopener">9、Everything</a></h1><p><img src="http://cdn.qianxunclub.com/Everything.Search.Window.png" alt=""></p><p>这个是比较老牌的软件了，搜索电脑上各种文件，速度快的吓人。</p><p>官网地址：<a href="http://www.voidtools.com/" target="_blank" rel="noopener">http://www.voidtools.com/</a></p><h1 id="10、MAC下xnip截图工具"><a href="#10、MAC下xnip截图工具" class="headerlink" title="10、MAC下xnip截图工具"></a><a href="https://xnipapp.com/" target="_blank" rel="noopener">10、MAC下xnip截图工具</a></h1><p><img src="https://cdn.qianxunclub.com/blog/ecDbxRr.jpg" alt=""></p><p>找了好多好多截图软件，还是这个比较舒服，一直用QQ截图习惯了，就找了一个类似QQ截图方式的工具，还能滚动截图，实用。</p><p>官网地址：<a href="https://xnipapp.com/" target="_blank" rel="noopener">https://xnipapp.com/</a></p><h1 id="11、MAC自定义快捷键工具"><a href="#11、MAC自定义快捷键工具" class="headerlink" title="11、MAC自定义快捷键工具"></a><a href="https://manico.im/" target="_blank" rel="noopener">11、MAC自定义快捷键工具</a></h1><p><img src="https://manico.im/static/img/manico-homepage-banner@2x.5948f72d46dc.png" alt=""></p><p>提高开发效率，各种软件切换和快速启动必不可缺啊，这个就特别适用，功能也算齐全。</p><p>官网地址：<a href="https://manico.im/" target="_blank" rel="noopener">https://manico.im/</a></p>]]></content>
      
      <categories>
          
          <category> 技术杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>在原有的nginx上面安装Openresty和lua相关的模块</title>
      <link href="/linux/zai-yuan-you-de-nginx-an-zhuang-openresty/"/>
      <url>/linux/zai-yuan-you-de-nginx-an-zhuang-openresty/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>突然有一天出了个需求，做文件防盗链的，而且需要通过nginx来做，这个时候必然想到了<code>Openresty</code>，Openresty本身其实已经安装有nginx了，但是要求在公司原有的nginx上面装一些Openresty里面的模块，这个时候就有点复杂了，但是最终还是研究出来了，庆幸啊，这里做一个笔记，以便下次安装使用。<br><a id="more"></a></p><h1 id="安装openresty"><a href="#安装openresty" class="headerlink" title="安装openresty"></a>安装openresty</h1><ol><li>下载openresty  </li></ol><p>下载地址：<a href="https://github.com/openresty/openresty/releases" target="_blank" rel="noopener">https://github.com/openresty/openresty/releases</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/openresty/openresty/releases/download/v1.13.6.1/openresty-1.13.6.1.tar.gz</span><br></pre></td></tr></table></figure></p><ol start="2"><li>编译安装  </li></ol><p>解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf openresty-1.13.6.1.tar.gz</span><br><span class="line"></span><br><span class="line">cd openresty-1.13.6.1</span><br></pre></td></tr></table></figure></p><p>编译安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure -j2</span><br><span class="line"></span><br><span class="line">gmake</span><br><span class="line"></span><br><span class="line">gmake install</span><br></pre></td></tr></table></figure></p><h1 id="安装lua"><a href="#安装lua" class="headerlink" title="安装lua"></a>安装lua</h1><p>在下载<code>openresty</code>安装包的时候，里面其实已经依赖了<code>lua</code>了，只需要安装就好了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd openresty-1.13.6.1/bundle/LuaJIT-2.1-20171103/</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h1 id="nginx添加相关模块"><a href="#nginx添加相关模块" class="headerlink" title="nginx添加相关模块"></a>nginx添加相关模块</h1><ol><li>配置lua位置  </li></ol><p>找到以前<code>nginx</code>的源码包，配置lua位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.15.0</span><br><span class="line"></span><br><span class="line">export LUAJIT_LIB=/usr/local/openresty/lualib/</span><br><span class="line">export LUAJIT_INC=/usr/local/openresty/luajit/include/luajit-2.1/</span><br></pre></td></tr></table></figure><ol start="2"><li>重新编译nginx  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx --with-cc-opt=-O2 --add-module=/root/openresty-1.13.6.1/bundle/ngx_devel_kit-0.3.0 --add-module=/root/openresty-1.13.6.1/bundle/echo-nginx-module-0.61 --add-module=/root/openresty-1.13.6.1/bundle/xss-nginx-module-0.05 --add-module=/root/openresty-1.13.6.1/bundle/ngx_coolkit-0.2rc3 --add-module=/root/openresty-1.13.6.1/bundle/set-misc-nginx-module-0.31 --add-module=/root/openresty-1.13.6.1/bundle/form-input-nginx-module-0.12 --add-module=/root/openresty-1.13.6.1/bundle/encrypted-session-nginx-module-0.07 --add-module=/root/openresty-1.13.6.1/bundle/srcache-nginx-module-0.31 --add-module=/root/openresty-1.13.6.1/bundle/ngx_lua-0.10.11 --add-module=/root/openresty-1.13.6.1/bundle/ngx_lua_upstream-0.07 --add-module=/root/openresty-1.13.6.1/bundle/headers-more-nginx-module-0.33 --add-module=/root/openresty-1.13.6.1/bundle/array-var-nginx-module-0.05 --add-module=/root/openresty-1.13.6.1/bundle/memc-nginx-module-0.18 --add-module=/root/openresty-1.13.6.1/bundle/redis2-nginx-module-0.14 --add-module=/root/openresty-1.13.6.1/bundle/redis-nginx-module-0.3.7 --add-module=/root/openresty-1.13.6.1/bundle/rds-json-nginx-module-0.15 --add-module=/root/openresty-1.13.6.1/bundle/rds-csv-nginx-module-0.08 --add-module=/root/openresty-1.13.6.1/bundle/ngx_stream_lua-0.0.3 --with-ld-opt=-Wl,-rpath,/usr/local/lib/ --with-stream --with-stream_ssl_module --with-http_ssl_module</span><br></pre></td></tr></table></figure><p>编译完成了，执行<code>make</code>，记住，这里不要执行<code>make install</code>，不然会把以前安装的会覆盖的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p>这里有几个参数说明一下：</p><ul><li>–prefix=/usr/local/nginx：nginx安装目录</li><li>–add-module=/root/openresty-1.13.6.1/bundle：这个是刚刚下载的openresty安装包</li><li>–with-ld-opt=-Wl,-rpath,/usr/local/lib/：lua安装的路径，上面lua安装的时候，默认是这个位置的</li></ul><p>编译完成后，会新生成一个nginx执行文件，在nginx-1.15.0/objs目录下，测试一下对应的依赖有没有装上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.15.0/objs</span><br><span class="line"></span><br><span class="line">./nginx -V</span><br></pre></td></tr></table></figure><p>显示以下，说明完美<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nginx version: nginx/1.15.0</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-28) (GCC)</span><br><span class="line">built with OpenSSL 1.0.2k-fips  26 Jan 2017</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/local/nginx --with-cc-opt=-O2 --add-module=/root/openresty-1.13.6.1/bundle/ngx_devel_kit-0.3.0 --add-module=/root/openresty-1.13.6.1/bundle/echo-nginx-module-0.61 --add-module=/root/openresty-1.13.6.1/bundle/xss-nginx-module-0.05 --add-module=/root/openresty-1.13.6.1/bundle/ngx_coolkit-0.2rc3 --add-module=/root/openresty-1.13.6.1/bundle/set-misc-nginx-module-0.31 --add-module=/root/openresty-1.13.6.1/bundle/form-input-nginx-module-0.12 --add-module=/root/openresty-1.13.6.1/bundle/encrypted-session-nginx-module-0.07 --add-module=/root/openresty-1.13.6.1/bundle/srcache-nginx-module-0.31 --add-module=/root/openresty-1.13.6.1/bundle/ngx_lua-0.10.11 --add-module=/root/openresty-1.13.6.1/bundle/ngx_lua_upstream-0.07 --add-module=/root/openresty-1.13.6.1/bundle/headers-more-nginx-module-0.33 --add-module=/root/openresty-1.13.6.1/bundle/array-var-nginx-module-0.05 --add-module=/root/openresty-1.13.6.1/bundle/memc-nginx-module-0.18 --add-module=/root/openresty-1.13.6.1/bundle/redis2-nginx-module-0.14 --add-module=/root/openresty-1.13.6.1/bundle/redis-nginx-module-0.3.7 --add-module=/root/openresty-1.13.6.1/bundle/rds-json-nginx-module-0.15 --add-module=/root/openresty-1.13.6.1/bundle/rds-csv-nginx-module-0.08 --add-module=/root/openresty-1.13.6.1/bundle/ngx_stream_lua-0.0.3 --with-ld-opt=-Wl,-rpath,/usr/local/lib/ --with-stream --with-stream_ssl_module --with-http_ssl_module</span><br></pre></td></tr></table></figure></p><ol start="3"><li>复制nginx命令覆盖以前的nginx  </li></ol><p>复制前，最好把之前的nginx备份一下，以防不测<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin/</span><br><span class="line"></span><br><span class="line">cp nginx nginx.old</span><br></pre></td></tr></table></figure></p><p>赢新的覆盖,覆盖之前，最好停掉nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.15.0/</span><br><span class="line"></span><br><span class="line">cp objs/nginx /usr/local/nginx/sbin/</span><br></pre></td></tr></table></figure></p><p>这里会提示是否覆盖，输入y，然后回车就好了</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><ol><li>先测试nginx有没有被玩坏，先检查一下</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx</span><br><span class="line"></span><br><span class="line">./sbin/nginx -t</span><br><span class="line"></span><br><span class="line">./sbin/nginx</span><br></pre></td></tr></table></figure><p>启动完成，访问下以前的站点还能不能正常打开，目测是没问题的</p><ol start="2"><li>测试lua模块</li></ol><p>创建一个专门存放lua文件的文件夹,我习惯创建在nginx目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx</span><br><span class="line"></span><br><span class="line">mkdir lua</span><br></pre></td></tr></table></figure></p><p>创建一个lua文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim hello.lua</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ngx.log(ngx.ERR,&quot;hello&quot;);</span><br></pre></td></tr></table></figure></p><p>把这个lua文件依赖到nginx里面试试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">        root /workspace/hexo/public/;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        access_by_lua_file lua/hello.lua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>老规矩，先检查下有没问题没，然后重启<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx</span><br><span class="line"></span><br><span class="line">./sbin/nginx -t</span><br><span class="line"></span><br><span class="line">./sbin/nginx -s reload</span><br></pre></td></tr></table></figure></p><p>然后打开日志，准备看有没有打印对应的日志信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f logs/error.log</span><br></pre></td></tr></table></figure></p><p>正常会看到以下日志<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018/07/04 11:58:38 [error] 15646#0: *52 [lua] hello.lua:2: hello,</span><br></pre></td></tr></table></figure></p><p>完美！</p>]]></content>
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Openresty </tag>
            
            <tag> Nginx </tag>
            
            <tag> Lua </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Apollo分布式配置中心部署以及使用</title>
      <link href="/tech/apollo-pei-zhi-zhong-xin-an-zhuang-bu-shu/"/>
      <url>/tech/apollo-pei-zhi-zhong-xin-an-zhuang-bu-shu/</url>
      <content type="html"><![CDATA[<h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><blockquote><p>Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</p></blockquote><p>官方github：<a href="https://github.com/ctripcorp/apollo" target="_blank" rel="noopener">https://github.com/ctripcorp/apollo</a>  </p><p>作者对Apollo对介绍：<a href="https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D" target="_blank" rel="noopener">https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D</a>  </p><a id="more"></a><h1 id="二、安装部署"><a href="#二、安装部署" class="headerlink" title="二、安装部署"></a>二、安装部署</h1><h2 id="基础设施"><a href="#基础设施" class="headerlink" title="基础设施"></a>基础设施</h2><p>本次部署环境为DEV（开发环境）、FAT（测试环境）、UAT（预生产）、PRO（生产）  </p><p><strong>应用服务器：</strong></p><table><thead><tr><th style="text-align:center">环境</th><th>服务器</th><th>服务</th><th style="text-align:center">端口</th></tr></thead><tbody><tr><td style="text-align:center">/</td><td>192.168.35.206</td><td>apollo-portal</td><td style="text-align:center">9102</td></tr><tr><td style="text-align:center">DEV</td><td>192.168.35.207</td><td>apollo-configservice<br>apollo-adminservice</td><td style="text-align:center">9100<br>9101</td></tr><tr><td style="text-align:center">FAT</td><td>192.168.35.208</td><td>apollo-configservice<br>apollo-adminservice</td><td style="text-align:center">9100<br>9101</td></tr><tr><td style="text-align:center">UAT</td><td>192.168.35.209</td><td>apollo-configservice<br>apollo-adminservice</td><td style="text-align:center">9100<br>9101</td></tr><tr><td style="text-align:center">PRO</td><td>192.168.35.210</td><td>apollo-configservice<br>apollo-adminservice</td><td style="text-align:center">9100<br>9101</td></tr></tbody></table><p><strong>数据库服务器：</strong></p><table><thead><tr><th style="text-align:center">环境</th><th>服务器</th><th>服务</th><th>数据库</th><th style="text-align:center">端口</th></tr></thead><tbody><tr><td style="text-align:center">/</td><td>192.168.35.226</td><td>apollo-portal</td><td>ApolloPortalDB</td><td style="text-align:center">3306</td></tr><tr><td style="text-align:center">DEV</td><td>192.168.35.227</td><td>apollo-configservice<br>apollo-adminservice</td><td>ApolloConfigDB</td><td style="text-align:center">3306</td></tr><tr><td style="text-align:center">FAT</td><td>192.168.35.228</td><td>apollo-configservice<br>apollo-adminservice</td><td>ApolloConfigDB</td><td style="text-align:center">3306</td></tr><tr><td style="text-align:center">UAT</td><td>192.168.35.229</td><td>apollo-configservice<br>apollo-adminservice</td><td>ApolloConfigDB</td><td style="text-align:center">3306</td></tr><tr><td style="text-align:center">PRO</td><td>192.168.35.230</td><td>apollo-configservice<br>apollo-adminservice</td><td>ApolloConfigDB</td><td style="text-align:center">3306</td></tr></tbody></table><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>下载代码：</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ctripcorp/apollo.git</span><br></pre></td></tr></table></figure><p>比较重要的几个项目：  </p><ul><li>apollo-configservice：提供配置获取接口，提供配置更新推送接口，接口服务对象为Apollo客户端  </li><li>apollo-adminservice：提供配置管理接口，提供配置修改、发布等接口，接口服务对象为Portal，以及Eureka  </li><li>apollo-portal：提供Web界面供用户管理配置  </li><li>apollo-client：Apollo提供的客户端程序，为应用提供配置获取、实时更新等功能  </li></ul><p><img src="http://cdn.qianxunclub.com/release-message-notification-design.png" alt=""></p><p>上图简要描述了配置发布的大致过程：</p><ul><li>用户在Portal操作配置发布</li><li>Portal调用Admin Service的接口操作发布</li><li>Admin Service发布配置后，发送ReleaseMessage给各个Config Service</li><li>Config Service收到ReleaseMessage后，通知对应的客户端</li></ul><p><strong>数据库初始化：</strong>  </p><p><em>下面的sql为大写格式，注意数据库的大小写敏感设置</em></p><ul><li>ApolloPortalDB：执行<code>apollo\scripts\sql\apolloportaldb.sql</code></li><li>ApolloConfigDB：DEV FAT UAT PRO 环境执行<code>apollo\scripts\sql\apolloconfigdb.sql</code></li></ul><p><strong>调整配置并打包：</strong>  </p><p>在<code>Apollo</code>项目中找到目录<code>apollo\scripts\</code>的配置文件<code>build.sh</code>或者<code>build.bat</code>  </p><ol><li>数据库配置<br>修改数据库配置，上面的是<code>ApolloConfigDB</code>配置，下面的是<code>ApolloPortalDB</code>配置：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># apollo config db info  该数据库配置只需要配置一次，不同环境无需修改</span><br><span class="line">apollo_config_db_url=jdbc:mysql://192.168.35.227:3306/ApolloConfigDB?characterEncoding=utf8</span><br><span class="line">apollo_config_db_username=XXXX</span><br><span class="line">apollo_config_db_password=XXXX</span><br><span class="line"></span><br><span class="line"># apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打对应环境的JAR包</span><br><span class="line">apollo_portal_db_url=jdbc:mysql://192.168.35.226:3306/ApolloPortalDB?characterEncoding=utf8</span><br><span class="line">apollo_portal_db_username=XXXX</span><br><span class="line">apollo_portal_db_password=XXXX</span><br></pre></td></tr></table></figure><ul><li>apollo config db info  该数据库配置只需要配置一次，不同环境无需修改</li><li>apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打</li></ul><ol start="2"><li>修改环境调用地址  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># meta server url, different environments should have different meta server addresses</span><br><span class="line">dev_meta=http://192.168.35.207:9100</span><br><span class="line">fat_meta=http://192.168.35.208:9100</span><br><span class="line">uat_meta=http://192.168.35.209:9100</span><br><span class="line">pro_meta=http://192.168.35.210:9100</span><br></pre></td></tr></table></figure><ol start="3"><li>修改数据库数据  </li></ol><p>在DEV FAT UAT PRO 对应的<code>ApolloConfigDB</code>数据库中,找到表<code>ServerConfig</code>中的<code>eureka.service.url</code>配置项：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> apolloconfigdb.ServerConfig <span class="keyword">SET</span> ServerConfig.<span class="string">`Value`</span>=<span class="string">'http://localhost:9100/eureka/'</span> <span class="keyword">WHERE</span> <span class="string">`Key`</span>=<span class="string">'eureka.service.url'</span>;</span><br></pre></td></tr></table></figure><p>修改环境配置，在<code>ApolloPortalDB</code>数据库修改表<code>ServerConfig</code>中的<code>apollo.portal.envs</code>:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> apolloportaldb.serverconfig <span class="keyword">SET</span> serverconfig.<span class="string">`Value`</span>=<span class="string">'dev,fat,uat,pro'</span> <span class="keyword">WHERE</span> <span class="string">`Key`</span>=<span class="string">'apollo.portal.envs'</span>;</span><br></pre></td></tr></table></figure><p>具体<code>eureka</code>配置，可以查看官网：<a href="https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97" target="_blank" rel="noopener">https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97</a></p><ol start="4"><li>编译、打包</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./build.sh</span><br></pre></td></tr></table></figure><ul><li>该脚本会依次打包<code>apollo-configservice</code>, <code>apollo-adminservice</code>, <code>apollo-portal</code>和<code>apollo-client</code>。</li><li>由于<code>ApolloConfigDB</code>在每个环境都有部署，所以对不同环境的<code>config-service</code>和<code>admin-service</code>需要使用不同的数据库连接信息打不同的包，<code>portal</code>和<code>client</code>只需要打一次包即可</li></ul><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><p><strong>部署程序到对应的服务器</strong>  </p><ol><li>部署apollo-configservice</li></ol><p>将<code>apollo-configservice/target/</code>目录下的<code>apollo-configservice-x.x.x-github.zip</code>上传到服务器上，解压<br>修改<code>scripts/startup.sh</code> ： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LOG_DIR=/opt/logs/100003171</span><br><span class="line">SERVER_PORT=9100</span><br></pre></td></tr></table></figure><p>执行<code>scripts/startup.sh</code>即可<br>如需停止服务，执行<code>scripts/shutdown.sh.</code>  </p><ol start="2"><li>部署apollo-adminservice</li></ol><p>将<code>apollo-adminservice/target/</code>目录下的<code>apollo-adminservice-x.x.x-github.zip</code>上传到服务器上，解压<br>修改<code>scripts/startup.sh</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LOG_DIR=/opt/logs/100003172</span><br><span class="line">SERVER_PORT=9101</span><br></pre></td></tr></table></figure><p>执行<code>scripts/startup.sh</code>即可<br>如需停止服务，执行<code>scripts/shutdown.sh.</code>  </p><ol start="3"><li>部署apollo-portal</li></ol><p>将<code>apollo-portal/target/</code>目录下的<code>apollo-portal-x.x.x-github.zip</code>上传到服务器上，解压<br>修改<code>scripts/startup.sh</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LOG_DIR=/opt/logs/100003173</span><br><span class="line">SERVER_PORT=9102</span><br></pre></td></tr></table></figure><p>执行<code>scripts/startup.sh</code>即可<br>如需停止服务，执行<code>scripts/shutdown.sh.</code>  </p><p><strong>访问测试</strong>  </p><p>上面部署完成，可以测试</p><p>访问不同环境的<code>eureka</code>，查看服务注册情况是否正确：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.35.207:9100/</span><br></pre></td></tr></table></figure><p>如果可以看到:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.35.207:apollo-adminservice:9101</span><br><span class="line">192.168.35.207:apollo-configservice:9100</span><br></pre></td></tr></table></figure><p>两个服务都为UP，正常！</p><p>访问客户端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.35.206:9102/</span><br></pre></td></tr></table></figure><p>登录，默认用户名密码为：<code>apollo/admin</code>  </p><p>新建项目测试。</p><h1 id="三、使用配置中心配置信息"><a href="#三、使用配置中心配置信息" class="headerlink" title="三、使用配置中心配置信息"></a>三、使用配置中心配置信息</h1><ol><li>maven引入上面步骤编译打包成功的<code>apollo-core</code>和<code>apollo-client</code>包：  </li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ctrip.framework.apollo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apollo-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.11.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ctrip.framework.apollo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apollo-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.11.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建app.properties  </li></ol><p>请确保classpath:/META-INF/app.properties文件存在，并且其中内容为自己的项目名称，而且要保持唯一：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.id=demo</span><br></pre></td></tr></table></figure></p><ol start="3"><li>环境变量配置  </li></ol><p><strong>本地开发</strong>  </p><p>如果是本地开发，可以在开发工具添加Environment：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env=DEV</span><br></pre></td></tr></table></figure><p><strong>线上环境配置方式：</strong>  </p><ul><li>使用Java启动参数添加<code>java -Denv=YOUR-ENVIRONMENT -jar xxx.jar</code></li><li>通过操作系统的System Environment</li><li>通过配置文件：<br>对于Mac/Linux，文件位置为/opt/settings/server.properties<br>对于Windows，文件位置为C:\opt\settings\server.properties  </li></ul><ol start="4"><li>配置apollo-env.properties  </li></ol><p>在项目中引用<code>apollo-core</code>和<code>apollo-client</code>包，在<code>apollo-core</code>包中可以看到<code>apollo-env.properties</code>配置文件，默认配置为打包前配置的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local.meta=http://localhost:8080</span><br><span class="line">dev.meta=http://192.168.35.207:9100</span><br><span class="line">fat.meta=http://192.168.35.208:9100</span><br><span class="line">uat.meta=http://192.168.35.209:9100</span><br><span class="line">lpt.meta=$&#123;lpt_meta&#125;</span><br><span class="line">pro.meta=http://192.168.35.210:9100</span><br></pre></td></tr></table></figure><p>如果需要修改或者覆盖的话，在项目的<code>resources</code>从上面复制一个<code>apollo-env.properties</code>文件，修改对应环境信息就可以了</p><ol start="5"><li>启用配置<br>在启动类添加<code>@EnableApolloConfig</code>注解即可：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chihiro.zhang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableApolloConfig</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(Application.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>测试  </li></ol><p>添加一个测试的类<code>DemoConfiguration</code>，当然配置中心要有下面配置的配置信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableAutoConfiguration</span><br><span class="line">public class DemoConfiguration &#123;</span><br><span class="line">    @Value(&quot;$&#123;demo&#125;&quot;)</span><br><span class="line">    private String demo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>完成！</p><h1 id="四、部署方案"><a href="#四、部署方案" class="headerlink" title="四、部署方案"></a>四、部署方案</h1><p>这个图是计划部署的方案，并不是上面写的例子的方案</p><p><img src="http://cdn.qianxunclub.com/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E4%B8%AD%E5%BF%83.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 技术杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Java </tag>
            
            <tag> 分布式 </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Cloud Config分布式配置中心的使用和遇到的坑</title>
      <link href="/java/spring-cloud/spring-cloud-config-fen-bu-shi-pei-zhi-zhong-xin/"/>
      <url>/java/spring-cloud/spring-cloud-config-fen-bu-shi-pei-zhi-zhong-xin/</url>
      <content type="html"><![CDATA[<h1 id="分布式配置中心"><a href="#分布式配置中心" class="headerlink" title="分布式配置中心"></a>分布式配置中心</h1><p>为什么要有用分布式配置中心这玩意儿？现在这微服务大军已经覆盖了各种大小型企业，每个服务的粒度相对较小，因此系统中会出现大量的服务，每个服务都要有自己都一些配置信息，或者相同的配置信息，可能不同环境每个服务也有单独的一套配置，这种情况配置文件数量比较庞大，维护起来相当费劲，举个栗子：<br>在开发的过程中，一般数据库是开发环境数据库，所有服务DB的IP配置为：92.168.0.1，突然老大说，开发环境换了，DB的IP要修改，这下可不好受了，所有模块挨个修改DB的配置，就问你难受不难受？<br>这个时候分布式配置中心就发挥了很大的优势，只需要修改配置中心配置，所有服务即可自动生效，爽不爽！  </p><a id="more"></a><h1 id="Spring-Cloud-Config"><a href="#Spring-Cloud-Config" class="headerlink" title="Spring Cloud Config"></a>Spring Cloud Config</h1><p>官网地址：<a href="http://cloud.spring.io/spring-cloud-config/" target="_blank" rel="noopener">http://cloud.spring.io/spring-cloud-config/</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Spring Cloud Config</code>为服务端和客户端提供了分布式系统的外部化配置支持。配置服务器为各应用的所有环境提供了一个中心化的外部配置。它实现了对服务端和客户端对<code>Spring Environment</code>和<code>PropertySource</code>抽象的映射，所以它除了适用于Spring构建的应用程序，也可以在任何其他语言运行的应用程序中使用。作为一个应用可以通过部署管道来进行测试或者投入生产，我们可以分别为这些环境创建配置，并且在需要迁移环境的时候获取对应环境的配置来运行。  </p><p>置服务器默认采用git来存储配置信息，这样就有助于对环境配置进行版本管理，并且可以通过git客户端工具来方便的管理和访问配置内容。当然他也提供本地化文件系统的存储方式。  </p><p>使用 spring Cloud 进行集中式配置管理，将以往的配置文件从项目中摘除后放到Git 或svn中集中管理，并在需要变更的时候，可以通知到各应用程序，应用程序刷新配置不需要重启。  </p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>其实这个实现原理相对比较简单一些，基于git的交互操作。</p><ol><li>我们把配置文件存放到git上面</li><li>Spring Cloud Config配置中心服务连接git</li><li>客户端需要配置配置信息从配置中心服务获取</li><li>当客户端启动，会从配置中心获取git上面的配置信息</li></ol><h1 id="配置中心服务端"><a href="#配置中心服务端" class="headerlink" title="配置中心服务端"></a>配置中心服务端</h1><p><strong>pom.xml添加依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring cloud --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.SR3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Application启动类添加注解</strong></p><p>添加<code>@EnableConfigServer</code>注解，启用配置中心：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qianxunclub;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.config.server.EnableConfigServer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> chihiro.zhang</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>配置文件</strong></p><p>在<code>application.yml</code>或者<code>application.properties</code>添加配置信息：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      server:</span></span><br><span class="line"><span class="attr">        git:</span></span><br><span class="line"><span class="attr">          uri:</span> <span class="attr">https://gitee.com/qianxunclub/spring-boot-config-repo</span></span><br><span class="line"><span class="attr">          default-label:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">          search-paths:</span> <span class="string">/**</span></span><br><span class="line"><span class="attr">          basedir:</span> <span class="string">target/config</span></span><br></pre></td></tr></table></figure><ul><li>spring.cloud.config.server.git.uri：配置git仓库地址</li><li>spring.cloud.config.server.git.search-paths：仓库文件夹目录，如果是<code>/**</code>，就是所有目录所有文件</li><li>spring.cloud.config.server.git.default-label：配置仓库的分支</li><li>spring.cloud.config.server.git.basedir：配置文件拉去到本地的目录位置</li></ul><p><strong>启动测试</strong></p><p>首先在git里面添加一个<code>application-dev.yml</code>配置文件，内容如此下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test:</span> <span class="string">我是配置中心配置信息</span></span><br></pre></td></tr></table></figure></p><p>已经配置完成了，启动一波试试，看效果咋样，正常情况下是可以正常启动的，然后获取配置文件试试<br>访问地址：<a href="http://localhost:8888/test/dev" target="_blank" rel="noopener">http://localhost:8888/test/dev</a><br>如果返回如下，就是成功了：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>:<span class="string">"test"</span>,</span><br><span class="line">    <span class="attr">"profiles"</span>:[</span><br><span class="line">        <span class="string">"dev"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"label"</span>:<span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"version"</span>:<span class="string">"64e7882a8f280641724e454a2db5a3da7b44d3d4"</span>,</span><br><span class="line">    <span class="attr">"state"</span>:<span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"propertySources"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>:<span class="string">"https://gitee.com/qianxunclub/spring-boot-config-repo/application-dev.yml"</span>,</span><br><span class="line">            <span class="attr">"source"</span>:&#123;</span><br><span class="line">                <span class="attr">"test"</span>:<span class="string">"配置中心的配置信息"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>http请求地址和资源文件映射如下:</p><ul><li>/{application}/{profile}[/{label}]</li><li>/{application}-{profile}.yml</li><li>/{label}/{application}-{profile}.yml</li><li>/{application}-{profile}.properties</li><li>/{label}/{application}-{profile}.properties</li></ul><h1 id="配置中心客户端使用"><a href="#配置中心客户端使用" class="headerlink" title="配置中心客户端使用"></a>配置中心客户端使用</h1><p><strong>pom.xml添加依赖</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring cloud --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.SR3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>配置文件</strong></p><p>创建<code>bootstrap.yml</code>文件，切记，是<code>bootstrap.yml</code>文件<code>bootstrap.yml</code>文件，我就因为写到了<code>application.yml</code>这个里面，各种出现问题啊，添加如下配置：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">application</span></span><br><span class="line"><span class="attr">      profile:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">      label:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">      uri:</span> <span class="attr">http://localhost:8888/</span></span><br></pre></td></tr></table></figure></p><ul><li>spring.cloud.config.label：指明远程仓库的分支</li><li>spring.cloud.config.profile：指定不同环境配置文件，和git仓库的 <code>application-dev.yml</code>对应  </li><li>spring.cloud.config.name：配置名称，一般和git仓库的<code>application-dev.yml</code>对应</li><li>spring.cloud.config.uri：上面的配置中心服务地址  </li></ul><p><strong>启动测试</strong></p><p>先添加一个获取配置信息的类:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chihiro.zhang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;test&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span>  String test;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>找个地方随便调用一下，输出这个test，就会打印上面git里面配置的信息了，爽不！</p><h1 id="说说中间遇到的坑"><a href="#说说中间遇到的坑" class="headerlink" title="说说中间遇到的坑"></a>说说中间遇到的坑</h1><ol><li>服务端git配置死活获取不了git仓库配置文件</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">    cloud:</span></span><br><span class="line"><span class="attr">        config:</span></span><br><span class="line"><span class="attr">        server:</span></span><br><span class="line"><span class="attr">            git:</span></span><br><span class="line"><span class="attr">                uri:</span> <span class="attr">https://gitee.com/qianxunclub/spring-boot-config-repo</span></span><br><span class="line"><span class="attr">                default-label:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">                search-paths:</span> <span class="string">/**</span></span><br><span class="line"><span class="attr">                basedir:</span> <span class="string">target/config</span></span><br></pre></td></tr></table></figure><p>当时这个<code>uri</code>配置的是公司的git仓库，公司的git仓库访问是需要开代理才能有权限访问的，代理也开了，可是一直报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Whitelabel Error Page</span><br><span class="line">This application has no explicit mapping for /error, so you are seeing this as a fallback.</span><br><span class="line"></span><br><span class="line">Wed Jun 06 11:10:56 CST 2018</span><br><span class="line">There was an unexpected error (type=Not Found, status=404).</span><br><span class="line">Cannot clone or checkout repository: http://xxx.com:5080/framework/config-repo</span><br></pre></td></tr></table></figure><p>很郁闷，不知道为啥，可是就在刚刚，就刚刚，写博客的时候，有测试了一下，通了。。。。日了狗了，不知道啥原因，等研究出来了再来补充。</p><ol start="2"><li>客户端配置一定要配置在<code>bootstrap.yml</code>里面<br><code>uri</code>默认会调用端口为<code>8888</code>的地址<code>http://localhost:8888/</code><br>启动的时候，会加载<code>label</code>和<code>uri</code>,<code>profile</code>配置，<code>profile</code>可以在启动参数添加，<code>profile</code>也可以加在<code>application.yml</code>添加<br><code>name</code>也可以加在<code>application.yml</code>添加  </li></ol><h1 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h1><p>配置中心服务端：<a href="https://gitee.com/qianxunclub/qianxunclub-springboot-config" target="_blank" rel="noopener">https://gitee.com/qianxunclub/qianxunclub-springboot-config</a><br>配置git仓库：<a href="https://gitee.com/qianxunclub/qianxunclub-springboot-config" target="_blank" rel="noopener">https://gitee.com/qianxunclub/qianxunclub-springboot-config</a><br>配置客户端使用：<a href="https://gitee.com/qianxunclub/qianxunclub-starter-demo" target="_blank" rel="noopener">https://gitee.com/qianxunclub/qianxunclub-starter-demo</a><br>客户端主要配置在：<a href="https://gitee.com/qianxunclub/qianxunclub-starter-parent/tree/master/qianxunclub-starter-config" target="_blank" rel="noopener">https://gitee.com/qianxunclub/qianxunclub-starter-parent/tree/master/qianxunclub-starter-config</a></p>]]></content>
      
      <categories>
          
          <category> Java </category>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 分布式 </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot的redis启动报错：ERR This instance has cluster support disabled</title>
      <link href="/exception/redis-qi-dong-bao-cuo-cluster-support-disabled/"/>
      <url>/exception/redis-qi-dong-bao-cuo-cluster-support-disabled/</url>
      <content type="html"><![CDATA[<h1 id="异常描述"><a href="#异常描述" class="headerlink" title="异常描述"></a>异常描述</h1><p>新建了一个项目，我自己的服务器安装了一个redis，安装的时候，基本上都是默认参数，然后SpringBoot配置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">    cluster:</span></span><br><span class="line"><span class="attr">      nodes:</span> <span class="string">qianxunclub.com:6666</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>在项目启动的时候，报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &apos;redisTemplate&apos; defined in class path resource [com/qianxunclub/starter/redis/autoconfigure/RedisConfig.class]: Unsatisfied dependency expressed through method &apos;redisTemplate&apos; parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;redisConnectionFactory&apos; defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)</span><br><span class="line">at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)</span><br><span class="line">... 33 common frames omitted</span><br><span class="line">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;redisConnectionFactory&apos; defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)</span><br><span class="line">at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)</span><br><span class="line">... 47 common frames omitted</span><br><span class="line">Caused by: redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled</span><br><span class="line">at redis.clients.jedis.Protocol.processError(Protocol.java:127)</span><br><span class="line">at redis.clients.jedis.Protocol.process(Protocol.java:161)</span><br><span class="line">at redis.clients.jedis.Protocol.read(Protocol.java:215)</span><br><span class="line">at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)</span><br><span class="line">at redis.clients.jedis.Connection.getRawObjectMultiBulkReply(Connection.java:285)</span><br><span class="line">at redis.clients.jedis.Connection.getObjectMultiBulkReply(Connection.java:291)</span><br><span class="line">at redis.clients.jedis.Jedis.clusterSlots(Jedis.java:3376)</span><br><span class="line">at redis.clients.jedis.JedisClusterInfoCache.discoverClusterNodesAndSlots(JedisClusterInfoCache.java:54)</span><br><span class="line">at redis.clients.jedis.JedisClusterConnectionHandler.initializeSlotsCache(JedisClusterConnectionHandler.java:39)</span><br><span class="line">at redis.clients.jedis.JedisClusterConnectionHandler.&lt;init&gt;(JedisClusterConnectionHandler.java:17)</span><br><span class="line">at redis.clients.jedis.JedisSlotBasedConnectionHandler.&lt;init&gt;(JedisSlotBasedConnectionHandler.java:20)</span><br><span class="line">at redis.clients.jedis.JedisSlotBasedConnectionHandler.&lt;init&gt;(JedisSlotBasedConnectionHandler.java:15)</span><br><span class="line">at redis.clients.jedis.BinaryJedisCluster.&lt;init&gt;(BinaryJedisCluster.java:41)</span><br><span class="line">at redis.clients.jedis.JedisCluster.&lt;init&gt;(JedisCluster.java:83)</span><br><span class="line">at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:306)</span><br><span class="line">at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:280)</span><br><span class="line">at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.afterPropertiesSet(JedisConnectionFactory.java:241)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)</span><br><span class="line">... 58 common frames omitted</span><br><span class="line">Disconnected from the target VM, address: &apos;127.0.0.1:52157&apos;, transport: &apos;socket&apos;</span><br><span class="line"></span><br><span class="line">Process finished with exit code 1</span><br></pre></td></tr></table></figure><h1 id="异常分析"><a href="#异常分析" class="headerlink" title="异常分析"></a>异常分析</h1><p>从报错误的信息<code>ERR This instance has cluster support disabled</code>很明显看得出来，是没有启动redis集群功能，可是我项目配置的集群的配置方式，要么修改代码为单机配置，要么修改redis为集群方式。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>1、可以修改配置为单机redis配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">    host:</span> <span class="string">qianxunclub.com</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">6666</span></span><br></pre></td></tr></table></figure><p>2、在安装redis的目录找到redis配置文件<code>redis.conf</code>，里面会找到配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cluster-enabled yes</span><br></pre></td></tr></table></figure></p><p>把注释去掉就可以了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cluster-enabled yes</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 异常记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exception </tag>
            
            <tag> Redis </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>自定义SpringBoot的starter-parent，制定开发规范，和提高开发效率</title>
      <link href="/java/spring-boot/zi-ding-yi-springboot-starter-parent-tongyi-kaifa-guifan-tigao-kaifa-xiaolv/"/>
      <url>/java/spring-boot/zi-ding-yi-springboot-starter-parent-tongyi-kaifa-guifan-tigao-kaifa-xiaolv/</url>
      <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>SpringBoot咱们开发一般<code>pom.xml</code>是都集成<code>spring-boot-starter-parent</code>的，这里为什么要自定义一个starter-parent呢，主要以下几个理由：  </p><ol><li>定义开发规范：自定义parent可以制定统一配置和依赖规范  </li><li>提高开发效率 </li><li>统一模块插件化管理：可以在parent实现需要的插件配置，如：redis、mysql、日志、参数校验等  </li><li>项目版本升级和依赖包升级更加方便统一  </li><li>日志收集等可以从切面获取各个项目数据和日志等</li><li>项目持续集成部署交付方便处理  </li></ol><a id="more"></a><p> 其实好处挺多的，谁用谁知道。</p><p> 源码地址：<a href="https://gitee.com/qianxunclub/qianxunclub-starter-parent" target="_blank" rel="noopener">https://gitee.com/qianxunclub/qianxunclub-starter-parent</a><br> 源码依赖公用包：<a href="https://gitee.com/qianxunclub/framework-common" target="_blank" rel="noopener">https://gitee.com/qianxunclub/framework-common</a>  </p><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><p><em><code>qianxunclub-starter-parent</code>里面已经开发好的几个插件，需要依据公司真实环境修改配置</em></p><p>源码地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/qianxunclub/qianxunclub-starter-parent.git</span><br></pre></td></tr></table></figure></p><p>因为<code>qianxunclub-starter-parent</code>依赖了另一个<code>framework-common</code>工具包，所以要下载该包源码并且编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/qianxunclub/framework-common.git</span><br></pre></td></tr></table></figure></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd framework-common</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure><h1 id="二、starter-parent插件功能列表"><a href="#二、starter-parent插件功能列表" class="headerlink" title="二、starter-parent插件功能列表"></a>二、starter-parent插件功能列表</h1><p>本starter已包含一下功能：  </p><ol><li><a href="https://projectlombok.org/features/all" target="_blank" rel="noopener">lombok插件添加</a></li><li><a href="#qianxunclub-starter-logging">日志输出：qianxunclub-starter-logging</a></li><li><a href="#qianxunclub-starter-swagger">swagger接口文档：qianxunclub-starter-swagger</a></li><li><a href="#qianxunclub-starter-web">跨域请求、http编码配置入参校验等：qianxunclub-starter-web</a></li><li><a href="#qianxunclub-starter-mysql">mysql以及MybatisPlus引用：qianxunclub-starter-mysql</a>（如果不使用，禁止引入该包，否则项目启动出错）</li><li><a href="#qianxunclub-starter-redis">redis支持：qianxunclub-starter-redis</a>（如果不使用，禁止引入该包，否则项目启动出错）  </li></ol><h1 id="三、开发配置"><a href="#三、开发配置" class="headerlink" title="三、开发配置"></a>三、开发配置</h1><h2 id="pom-xml编辑"><a href="#pom-xml编辑" class="headerlink" title="pom.xml编辑"></a>pom.xml编辑</h2><p>POM需要依赖父级<code>qianxunclub-starter-parent</code>：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>继承该依赖，无需再引用<code>spring-boot-starter-parent</code>,本项目已经继承的<code>spring-boot-starter-parent</code>版本为<code>1.5.9.RELEASE</code>。</p><h2 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">qianxunclub-demo</span><br><span class="line">├── pom.xml</span><br><span class="line">├── qianxunclub-demo.iml</span><br><span class="line">└── src</span><br><span class="line">    ├── main</span><br><span class="line">    │   ├── java</span><br><span class="line">    │   │   └── com</span><br><span class="line">    │   │       └── qianxunclub</span><br><span class="line">    │   │           ├── Application.java</span><br><span class="line">    │   │           └── demo</span><br><span class="line">    │   │               └── web</span><br><span class="line">    │   └── resources</span><br><span class="line">    │       └── application.yml</span><br><span class="line">    └── test</span><br><span class="line">        └── java</span><br></pre></td></tr></table></figure><ol><li>com.qianxunclub：项目根包名，必须以该名称命名，并且SpringBoot启动类必须在该目录</li><li>group：项目分组名称，通常依据项目在GIT分组名称命名</li><li>demo：项目名称，通常依据GIT名称命名</li><li>web：controller控制器，，必须以该名称命名</li><li>resources：资源目录</li></ol><h2 id="application-yml基础配置信息"><a href="#application-yml基础配置信息" class="headerlink" title="application.yml基础配置信息"></a>application.yml基础配置信息</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span></span><br><span class="line"><span class="attr">  group:</span> <span class="string">group</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">  descriptions:</span> <span class="string">项目描述</span></span><br><span class="line"><span class="attr">  author:</span> <span class="string">千寻啊千寻</span></span><br><span class="line"><span class="attr">  email:</span> <span class="number">960339491</span><span class="string">@qq.com</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    include:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">web</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">swagger</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">logging</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><ol><li>group：项目分组名称，和包结构中的分组名称必须一致  </li><li>name：项目名称。和包结构中项目名称必须一致  </li><li>descriptions：项目描述信息  </li><li>author：项目负责人名称  </li><li>email：项目负责人邮箱  </li><li>spring.profiles.include：使用已经定义的starter功能,项目参考本文第三章  </li></ol><h1 id="四、starter使用说明"><a href="#四、starter使用说明" class="headerlink" title="四、starter使用说明"></a>四、starter使用说明</h1><h2 id="日志输出：qianxunclub-starter-logging"><a href="#日志输出：qianxunclub-starter-logging" class="headerlink" title="日志输出：qianxunclub-starter-logging"></a>日志输出：qianxunclub-starter-logging</h2><p><span id="qianxunclub-starter-logging">　</span></p><h3 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h3><h4 id="pom-xml引入包："><a href="#pom-xml引入包：" class="headerlink" title="pom.xml引入包："></a>pom.xml引入包：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 日志配置信息 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.qianxunclub&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;qianxunclub-starter-logging&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>profiles需要引入配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    include:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">logging</span></span><br></pre></td></tr></table></figure><p>自定义配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line">    <span class="string">com.qianxunclub:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure><p>以下为缺省配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line">    <span class="string">org.springframework:</span> <span class="string">info</span></span><br><span class="line">    <span class="string">com.qianxunclub:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">  pattern:</span></span><br><span class="line"><span class="attr">    console:</span> <span class="string">"%date&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %highlight(%-5level) %cyan(%logger&#123;64&#125;)  - %msg%n"</span></span><br><span class="line"><span class="attr">  file:</span> <span class="string">/logs/$&#123;app.group:&#125;/$&#123;app.name:$&#123;spring.application.name:application&#125;&#125;/$&#123;spring.application.name:application&#125;.log</span></span><br></pre></td></tr></table></figure><p><strong><br>日志默认存放目录：/logs/项目分组/项目名称/日志文件<br>如果没有项目分组：/logs/项目名称/日志文件</strong></p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>只需要在类上面添加<code>@Slf4j</code>注解，即可使用<code>log</code>对象打印日志</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(Application.class, args);</span><br><span class="line">log.info(<span class="string">"日志信息"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="swagger接口文档：qianxunclub-starter-swagger"><a href="#swagger接口文档：qianxunclub-starter-swagger" class="headerlink" title="swagger接口文档：qianxunclub-starter-swagger"></a>swagger接口文档：qianxunclub-starter-swagger</h2><p>官网：<a href="https://swagger.io/" target="_blank" rel="noopener">https://swagger.io/</a></p><p><span id="qianxunclub-starter-swagger">　</span></p><h3 id="配置方式-1"><a href="#配置方式-1" class="headerlink" title="配置方式"></a>配置方式</h3><h4 id="pom-xml引入包：-1"><a href="#pom-xml引入包：-1" class="headerlink" title="pom.xml引入包："></a>pom.xml引入包：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 自动生成接口文档 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-swagger<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="application-yml配置-1"><a href="#application-yml配置-1" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>swagger默认是不启用的，必须添加一下配置，才可以开启配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span></span><br><span class="line"><span class="attr">  swagger:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    include:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">swagger</span></span><br></pre></td></tr></table></figure><h4 id="启动类添加-EnableSBCSwagger注解，开启接口"><a href="#启动类添加-EnableSBCSwagger注解，开启接口" class="headerlink" title="启动类添加@EnableSBCSwagger注解，开启接口"></a>启动类添加<code>@EnableSBCSwagger</code>注解，开启接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableSBCSwagger</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(Application.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h3><p>启动项目成功后,访问API接口地址，例如：<a href="http://localhost:8080/swagger-ui.html。" target="_blank" rel="noopener">http://localhost:8080/swagger-ui.html。</a></p><h2 id="mysql以及MybatisPlus引用：qianxunclub-starter-mysql"><a href="#mysql以及MybatisPlus引用：qianxunclub-starter-mysql" class="headerlink" title="mysql以及MybatisPlus引用：qianxunclub-starter-mysql"></a>mysql以及MybatisPlus引用：qianxunclub-starter-mysql</h2><p><span id="qianxunclub-starter-mysql">　</span></p><h3 id="3-4-1配置方式"><a href="#3-4-1配置方式" class="headerlink" title="3.4.1配置方式"></a>3.4.1配置方式</h3><h4 id="pom-xml引入包：-2"><a href="#pom-xml引入包：-2" class="headerlink" title="pom.xml引入包："></a>pom.xml引入包：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- MYSQL配置信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-mysql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="application-yml配置-2"><a href="#application-yml配置-2" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>引入mysql配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    include:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><p>添加数据源信息：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span></span><br><span class="line"><span class="attr">  group:</span> <span class="string">group</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">oneway</span></span><br><span class="line"><span class="attr">  description:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">  author:</span> <span class="string">千寻啊千寻</span></span><br><span class="line"><span class="attr">  email:</span> <span class="number">960339491</span><span class="string">@qq.com</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    host:</span> <span class="string">xxx.xxx.xxx.xxx</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    druid:</span></span><br><span class="line"><span class="attr">      public-key:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure><p>端口默认为：3306<br>数据库密码加密：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp druid-1.1.6.jar com.alibaba.druid.filter.config.ConfigTools your_password</span><br></pre></td></tr></table></figure><h3 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h3><p>以上配置完成后即可使用mysql以及MybatisPlus，该starter已封装部分常用数据库操作，方法如下：<br>MybatisPlus使用说明：<a href="http://mp.baomidou.com/#/?id=%e7%ae%80%e4%bb%8b" target="_blank" rel="noopener">http://mp.baomidou.com/#/?id=%e7%ae%80%e4%bb%8b</a>  </p><p><strong>1、Entity规范</strong>  </p><p>数据库对应的Entity需要继承<code>BaseEntity</code>，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName</span>(<span class="string">"t_app"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppEntity</span> <span class="keyword">extends</span> <span class="title">BaseEntity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、Param规范</strong>  </p><p>Param为入参查询常用发放，Param需要继承<code>BaseParam</code>,如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppParam</span> <span class="keyword">extends</span> <span class="title">BaseParam</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、Mapper规范</strong>  </p><p>需要添加<code>@Mapper</code>注解，继承<code>BaseMapper</code>，并且要指定Entity泛型，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AppMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">AppEntity</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4、Dao规范</strong>  </p><p>需要继承<code>BaseDao</code>,并且指定泛型，如下：  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppDao</span> <span class="keyword">extends</span> <span class="title">BaseDao</span>&lt;<span class="title">AppMapper</span>,<span class="title">AppEntity</span>,<span class="title">AppParam</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5、mapper.xml规范</strong>  </p><p>默认可以不添加mapper.xml，如果遇到特定的SQL，可在<code>resources</code>资源目录添加mapper文件夹，并添加对应的XML即可</p><h2 id="redis支持：qianxunclub-starter-redis"><a href="#redis支持：qianxunclub-starter-redis" class="headerlink" title="redis支持：qianxunclub-starter-redis"></a>redis支持：qianxunclub-starter-redis</h2><p><span id="qianxunclub-starter-redis">　</span></p><h3 id="配置方式-2"><a href="#配置方式-2" class="headerlink" title="配置方式"></a>配置方式</h3><h4 id="pom-xml引入包：-3"><a href="#pom-xml引入包：-3" class="headerlink" title="pom.xml引入包："></a>pom.xml引入包：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- MYSQL配置信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="application-yml配置-3"><a href="#application-yml配置-3" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>引入mysql配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    include:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">redis</span></span><br></pre></td></tr></table></figure><p>添加redis配置信息：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">    host:</span> <span class="number">120.25</span><span class="number">.173</span><span class="number">.32</span></span><br><span class="line"><span class="attr">    password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure><p>端口默认为：6379  </p><p>下面为缺省配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">    database:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">    host:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">6379</span></span><br><span class="line"><span class="attr">    password:</span> </span><br><span class="line"><span class="attr">    pool:</span></span><br><span class="line">      <span class="comment"># 连接池最大连接数（使用负值表示没有限制）</span></span><br><span class="line"><span class="attr">      max-active:</span> <span class="number">8</span></span><br><span class="line">      <span class="comment"># 连接池最大阻塞等待时间（使用负值表示没有限制）</span></span><br><span class="line"><span class="attr">      max-wait:</span> <span class="bullet">-1</span></span><br><span class="line">      <span class="comment"># 连接池中的最大空闲连接</span></span><br><span class="line"><span class="attr">      max-idle:</span> <span class="number">8</span></span><br><span class="line">      <span class="comment"># 连接池中的最小空闲连接</span></span><br><span class="line"><span class="attr">      min-idle:</span> <span class="number">0</span></span><br><span class="line">      <span class="comment"># 连接超时时间（毫秒）</span></span><br><span class="line"><span class="attr">      timeout:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h3><p>在类中可直接注入<code>RedisTemplate</code>或<code>StringRedisTemplate</code>即可使用，例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/redis"</span>)</span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Api</span>(description = <span class="string">"redis"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"add"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"add"</span>,method = RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ValueOperations&lt;String, String&gt; operations=redisTemplate.opsForValue();</span><br><span class="line">operations.set(<span class="string">"ValueOperations"</span>,<span class="string">"1"</span>);</span><br><span class="line">log.info(operations.get(<span class="string">"ValueOperations"</span>));</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.opsForValue().set(<span class="string">"aaa"</span>, <span class="string">"111"</span>);</span><br><span class="line">log.info(stringRedisTemplate.opsForValue().get(<span class="string">"aaa"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="跨域请求、http编码配置入参校验等：qianxunclub-starter-web"><a href="#跨域请求、http编码配置入参校验等：qianxunclub-starter-web" class="headerlink" title="跨域请求、http编码配置入参校验等：qianxunclub-starter-web"></a>跨域请求、http编码配置入参校验等：qianxunclub-starter-web</h2><p><span id="qianxunclub-starter-web">　</span></p><h3 id="配置方式-3"><a href="#配置方式-3" class="headerlink" title="配置方式"></a>配置方式</h3><h4 id="pom-xml引入包：-4"><a href="#pom-xml引入包：-4" class="headerlink" title="pom.xml引入包："></a>pom.xml引入包：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 支持跨域请求 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="application-yml配置-4"><a href="#application-yml配置-4" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>profiles需要引入配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    include:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">web</span></span><br></pre></td></tr></table></figure><h1 id="五、配置最终效果如下"><a href="#五、配置最终效果如下" class="headerlink" title="五、配置最终效果如下"></a>五、配置最终效果如下</h1><p>pom.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动生成接口文档 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-swagger<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- web配置信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 日志配置信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- MYSQL配置信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qianxunclub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qianxunclub-starter-mysql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.yml:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span></span><br><span class="line"><span class="attr">  group:</span> <span class="string">group</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">  description:</span> <span class="string">demo服务</span></span><br><span class="line"><span class="attr">  author:</span> <span class="string">千寻啊千寻</span></span><br><span class="line"><span class="attr">  email:</span> <span class="number">960339491</span><span class="string">@qq.com</span></span><br><span class="line"><span class="attr">  swagger:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    host:</span> <span class="string">xxx.xxx.xxx.xxx</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    druid:</span></span><br><span class="line"><span class="attr">      public-key:</span> <span class="string">xxx</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    include:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">web</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">swagger</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">logging</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><p>完！</p>]]></content>
      
      <categories>
          
          <category> Java </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot启动Tomcat失败：Unable to start embedded Tomcat</title>
      <link href="/exception/spring-boot-tomcat-qi-dong-shi-bai/"/>
      <url>/exception/spring-boot-tomcat-qi-dong-shi-bai/</url>
      <content type="html"><![CDATA[<h1 id="异常描述"><a href="#异常描述" class="headerlink" title="异常描述"></a>异常描述</h1><blockquote><p>之前项目是dubbo的，分为两个服务，service数据层和web请求控制，使用dubbo互相调用的，现在要把dubbo去掉，使用SpringCloud的eureka了，要把两个合并成一个项目，这里并不是要把所有代码复制过去，而是把service使用maven引用到web项目里面，然后修改对应的配置和包路劲，启动的时候，竟然报错了，编译是没有任何问题的。</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">10:02:26.349 logback [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23</span><br><span class="line">10:02:26.463 logback [Tomcat-startStop-1] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start</span><br><span class="line">java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]</span><br><span class="line">        at java.util.concurrent.FutureTask.report(Unknown Source)</span><br><span class="line">        at java.util.concurrent.FutureTask.get(Unknown Source)</span><br><span class="line">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)</span><br><span class="line">        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)</span><br><span class="line">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)</span><br><span class="line">        at java.util.concurrent.FutureTask.run(Unknown Source)</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)</span><br><span class="line">        at java.lang.Thread.run(Unknown Source)</span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class="line">        ... 6 common frames omitted</span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: Failed to start component [Pipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]]</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class="line">        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5117)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        ... 6 common frames omitted</span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: Failed to start component [org.apache.catalina.authenticator.NonLoginAuthenticator[]]</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class="line">        at org.apache.catalina.core.StandardPipeline.startInternal(StandardPipeline.java:182)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        ... 8 common frames omitted</span><br><span class="line">Caused by: java.lang.NoSuchMethodError: javax.servlet.ServletContext.getVirtualServerName()Ljava/lang/String;</span><br><span class="line">        at org.apache.catalina.authenticator.AuthenticatorBase.startInternal(AuthenticatorBase.java:1141)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        ... 10 common frames omitted</span><br><span class="line">10:02:26.464 logback [main] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start</span><br><span class="line">java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]</span><br><span class="line">        at java.util.concurrent.FutureTask.report(Unknown Source)</span><br><span class="line">        at java.util.concurrent.FutureTask.get(Unknown Source)</span><br><span class="line">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)</span><br><span class="line">        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)</span><br><span class="line">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)</span><br><span class="line">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.&lt;init&gt;(TomcatEmbeddedServletContainer.java:84)</span><br><span class="line">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)</span><br><span class="line">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)</span><br><span class="line">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)</span><br><span class="line">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)</span><br><span class="line">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)</span><br><span class="line">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)</span><br><span class="line">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)</span><br><span class="line">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)</span><br><span class="line">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)</span><br><span class="line">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)</span><br><span class="line">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)</span><br><span class="line">        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</span><br><span class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Unknown Source)</span><br><span class="line">        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)</span><br><span class="line">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)</span><br><span class="line">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)</span><br><span class="line">        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)</span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class="line">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)</span><br><span class="line">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)</span><br><span class="line">        at java.util.concurrent.FutureTask.run(Unknown Source)</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)</span><br><span class="line">        at java.lang.Thread.run(Unknown Source)</span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: A child container failed during start</span><br><span class="line">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)</span><br><span class="line">        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        ... 6 common frames omitted</span><br><span class="line">10:02:26.465 logback [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded conta</span><br><span class="line">iner; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat</span><br><span class="line">10:02:26.485 logback [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer -</span><br><span class="line"></span><br><span class="line">Error starting ApplicationContext. To display the auto-configuration report re-run your application with &apos;debug&apos; enabled.</span><br><span class="line">10:02:26.492 logback [main] ERROR o.s.boot.SpringApplication - Application startup failed</span><br><span class="line">org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat</span><br><span class="line">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:137)</span><br><span class="line">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)</span><br><span class="line">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)</span><br><span class="line">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)</span><br><span class="line">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)</span><br><span class="line">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)</span><br><span class="line">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)</span><br><span class="line">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)</span><br><span class="line">        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</span><br><span class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Unknown Source)</span><br><span class="line">        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)</span><br><span class="line">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)</span><br><span class="line">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)</span><br><span class="line">        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)</span><br><span class="line">Caused by: org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat</span><br><span class="line">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:123)</span><br><span class="line">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.&lt;init&gt;(TomcatEmbeddedServletContainer.java:84)</span><br><span class="line">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)</span><br><span class="line">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)</span><br><span class="line">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)</span><br><span class="line">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)</span><br><span class="line">        ... 16 common frames omitted</span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardServer[-1]]</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class="line">        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)</span><br><span class="line">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)</span><br><span class="line">        ... 21 common frames omitted</span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardService[Tomcat]]</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class="line">        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        ... 23 common frames omitted</span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat]]</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class="line">        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        ... 25 common frames omitted</span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: A child container failed during start</span><br><span class="line">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)</span><br><span class="line">        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">        ... 27 common frames omitted</span><br></pre></td></tr></table></figure><h1 id="异常分析"><a href="#异常分析" class="headerlink" title="异常分析"></a>异常分析</h1><p>刚开始有点蒙蔽，之前项目一直可以运行，怎么就报错了呢，日了狗了，于是乎各种百度谷歌的，一顿查，基本上两个答案：</p><ol><li>servlet-api-xxx.jar包冲突</li><li>servlet-api-xxx.jar版本问题</li></ol><p>各种修改了以后，根本解决不了，看来只能靠自己了，有开始检查pom.xml，目前只能从pom.xml入手了检查了:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dfs-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.gwghk.base.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dfs-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我家pom是这样的，发现缺少两个属性配置的,没有<code>&lt;groupId&gt;xxx&lt;/groupId&gt;</code>和<code>&lt;packaging&gt;jar&lt;/packaging&gt;</code>。<br>其实之前都看到这个问题了，因为这项目是我修改别人的代码，就没在乎这个，以为没关系，然后我就加上试试看，是不是这个问题：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dfs-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.gwghk.base.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再重新编译一次启动试试看，卧槽，竟然成功了，就这个破问题，解决了一天！！！</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>问题就出现在pom配置不严谨，该有的还是要有的，不要瞎JB省略。<br>在pom中添加<code>&lt;groupId&gt;xxx&lt;/groupId&gt;</code>和<code>&lt;packaging&gt;jar&lt;/packaging&gt;</code>就可以正常启动了：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dfs-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.gwghk.base.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 异常记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exception </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何上传自己的jar包到maven公共远程中央仓库</title>
      <link href="/java/maven/ru-he-shang-chuan-zi-ji-de-jarbao-dao-mavengong-gong-yuan-cheng-zhong-yang-cang-ku/"/>
      <url>/java/maven/ru-he-shang-chuan-zi-ji-de-jarbao-dao-mavengong-gong-yuan-cheng-zhong-yang-cang-ku/</url>
      <content type="html"><![CDATA[<p>本文是以上传<code>https://oss.sonatype.org/</code>maven中央仓库为例</p><h1 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h1><p>如果有账号可忽略该步骤，注册地址：<code>https://issues.sonatype.org</code>，这里的账号和密码一定要记住。</p><h1 id="创建工单"><a href="#创建工单" class="headerlink" title="创建工单"></a>创建工单</h1><p><strong>在首页最上面导航中点击<code>Create</code>创建工单：</strong><br><a id="more"></a><br><img src="http://file.qianxunclub.com/201805/qqjie-tu-20180516105345.png" alt=""></p><p><strong>填写工单资料：</strong></p><p><img src="http://file.qianxunclub.com/201805/2.png" alt=""></p><ul><li>Project：选择开源项目</li><li>Issue Type：选择创建新项目</li><li>Summary：随意命名</li><li>Group Id：唯一标识，我是用<code>com.qianxunclub</code>,因为这个是我自己的域名，管理员会问qianxunclub.com这个是不是自己的网站，回答是就好了，如果使用<code>com.github.xxxxx</code>之类的，会方便一些。</li><li>Project URL：项目源码地址，如<code>https://gitee.com/qianxunclub/qianxunclub-maven-plugin</code></li><li>SCM url：项目管理地址，如：<a href="https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git" target="_blank" rel="noopener">https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git</a></li></ul><p><strong>发布</strong></p><p>然后点击发布会成功创建一个工单，工单状态为：open</p><h1 id="查看工单状态"><a href="#查看工单状态" class="headerlink" title="查看工单状态"></a>查看工单状态</h1><p><strong>点击上方导航栏<code>Issue</code>选择自己的工单：</strong></p><p><img src="http://file.qianxunclub.com/201805/3.png" alt=""></p><p>等到审核状态为<code>RESOLVED</code>，恭喜你，审核已经成功，第一次审核要一天左右 ，因为时差原因，他们工作时间是我们的晚上，之后在创建工单如果GroupId 满足基本要求基本就是秒过。</p><p><img src="http://file.qianxunclub.com/201805/4.png" alt=""></p><h1 id="上传jar包到maven中央仓库"><a href="#上传jar包到maven中央仓库" class="headerlink" title="上传jar包到maven中央仓库"></a>上传jar包到maven中央仓库</h1><p><strong>配置maven到<code>settings.xml</code>文件，添加以下内容：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;servers&gt; </span><br><span class="line">    &lt;server&gt; </span><br><span class="line">        &lt;id&gt;snapshots&lt;/id&gt; </span><br><span class="line">        &lt;username&gt;https://issues.sonatype.org的注册账号&lt;/username&gt; </span><br><span class="line">        &lt;password&gt;https://issues.sonatype.org的注册密码&lt;/password&gt; </span><br><span class="line">    &lt;/server&gt;</span><br><span class="line">&lt;/servers&gt;</span><br></pre></td></tr></table></figure><blockquote><p>这里注意以下，如果使用特殊符号，是需要转义的，例如：<code>pwd&amp;</code>，密码要填写成<code>pwd&amp;amp;</code></p></blockquote><p><strong>在自己的项目中修改<code>pom.xml</code>，添加以下内容：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;distributionManagement&gt;</span><br><span class="line">    &lt;repository&gt;</span><br><span class="line">        &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class="line">        &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots/&lt;/url&gt;</span><br><span class="line">    &lt;/repository&gt;</span><br><span class="line">    &lt;snapshotRepository&gt;</span><br><span class="line">        &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class="line">        &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots/&lt;/url&gt;</span><br><span class="line">    &lt;/snapshotRepository&gt;</span><br><span class="line">&lt;/distributionManagement&gt;</span><br></pre></td></tr></table></figure><p><strong>到这里就配置完成了，接下来开始发布试试了：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package deploy</span><br></pre></td></tr></table></figure><p>出现<code>success</code>字样，代表已经成功，可以在<code>https://oss.sonatype.org/content/groups/public</code>找到自己的jar包了。</p>]]></content>
      
      <categories>
          
          <category> Java </category>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>apidoc的maven插件，自动生成apidoc.json</title>
      <link href="/java/maven/apidocde-mavencha-jian-zi-dong-sheng-cheng-apidoc-json/"/>
      <url>/java/maven/apidocde-mavencha-jian-zi-dong-sheng-cheng-apidoc-json/</url>
      <content type="html"><![CDATA[<p>插件是用apidoc插件生成文档的，具体使用方式可查看官网：<a href="http://apidocjs.com/" target="_blank" rel="noopener">http://apidocjs.com/</a><br>该插件不会直接生成APIDOC文档，只会自动生成apidoc.json文件，需要执行<code>apidoc</code>命令才可以生成<br>apidoc.json文件会生成在项目根目录apidoc文件夹下<br><a id="more"></a></p><h1 id="下载依赖包"><a href="#下载依赖包" class="headerlink" title="下载依赖包"></a>下载依赖包</h1><p>可配置MAVEN仓库<code>https://oss.sonatype.org/content/groups/public</code><br>或者<br>下载源码包进行编译打包:<a href="https://gitee.com/qianxunclub/qianxunclub-maven-plugin" target="_blank" rel="noopener">https://gitee.com/qianxunclub/qianxunclub-maven-plugin</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd qianxunclub-maven-plugin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure><h1 id="编辑pom-xml，引入maven-plugin"><a href="#编辑pom-xml，引入maven-plugin" class="headerlink" title="编辑pom.xml，引入maven plugin"></a>编辑pom.xml，引入maven plugin</h1><p>在项目的pom文件中引入以下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;com.qianxunclub&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;qianxunclub-plugin-apidoc&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;executions&gt;</span><br><span class="line">&lt;execution&gt;</span><br><span class="line">&lt;goals&gt;</span><br><span class="line">&lt;goal&gt;apidoc&lt;/goal&gt;</span><br><span class="line">&lt;/goals&gt;</span><br><span class="line">&lt;/execution&gt;</span><br><span class="line">&lt;/executions&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure></p><p>在<code>properties</code>定义API的生成规范：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line">&lt;apidoc.skip&gt;false/&lt;/apidoc.skip&gt;</span><br><span class="line">&lt;apidoc.gen&gt;false&lt;/apidoc.gen&gt;</span><br><span class="line">&lt;apidoc.url&gt;http://ip:port/&lt;/apidoc.url&gt;</span><br><span class="line">&lt;apidoc.sampleUrl&gt;http://ip:port/&lt;/apidoc.sampleUrl&gt;</span><br><span class="line">&lt;/properties&gt;</span><br></pre></td></tr></table></figure></p><p>apidoc.skip：编译代码是否跳过生成apidoc.json<br>apidoc.gen：是否覆盖更新apidoc.json<br>apidoc.url：实例接口前缀<br>apidoc.sampleUrl：生成测试方法的请求地址  </p><h1 id="开始生成"><a href="#开始生成" class="headerlink" title="开始生成"></a>开始生成</h1><p>执行命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package</span><br></pre></td></tr></table></figure></p><p>可以添加以下参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -Dapidoc.skip=true</span><br></pre></td></tr></table></figure></p><p>-Dapidoc.skip=true：编译代码是否跳过生成apidoc.json<br>-Dapidoc.gen=true：是否覆盖更新apidoc.json<br>-Dapidoc.url=xxx：实例接口前缀<br>-Dapidoc.sampleUrl=xxx：生成测试方法的请求地址  </p><p>如果出现以下字样，说明生成完成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apidoc.json完成</span><br></pre></td></tr></table></figure></p><h1 id="生成api文档"><a href="#生成api文档" class="headerlink" title="生成api文档"></a>生成api文档</h1><p>在项目跟目录执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apidoc -i apidoc/ -o API文档存放目录/</span><br></pre></td></tr></table></figure></p><p>打开API文档存放目录中的<code>index.html</code>即可查看文档。</p>]]></content>
      
      <categories>
          
          <category> Java </category>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>这个世界，总有人偷偷爱着你</title>
      <link href="/video/zhe-ge-shi-jie-zong-you-ren-tou-tou-ai-zhao-ni/"/>
      <url>/video/zhe-ge-shi-jie-zong-you-ren-tou-tou-ai-zhao-ni/</url>
      <content type="html"><![CDATA[<p>这是999感冒灵推出的感恩节短片视频<br>广告片选取真人事件改编<br>以一段网络问答为线<br>串联5个反转故事  </p><a id="more"></a><iframe frameborder="0" width="800" height="450" src="https://v.qq.com/iframe/player.html?vid=g0508voeofz&tiny=0&auto=0" allowfullscreen></iframe>  <p>这是999感冒灵推出的感恩节短片视频<br>广告片选取真人事件改编<br>以一段网络问答为线<br>串联5个反转故事<br>反转前的文案非常直接无情地揭开了生活冷漠的一面<br>每个人都自顾不暇<br>没有人会在意你的感受<br>每个人都小心翼翼地活着<br>没有人在乎你的境遇<br>行色匆匆的人群里<br>你并不特别也不会有优待<br>你的苦楚<br>不过是别人眼里的笑话<br>人心冷漠的世界里<br>每个人都无处可逃<br>即使已经听惯了毒鸡汤<br>还是被这些话呕出一口血<br>大概是因为事实如此无法反驳吧<br>可是<br>这个世界不会好了吗？<br>故事总是有反转的</p>]]></content>
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> 公益广告 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HTTP请求返回编码大全以及解释分类</title>
      <link href="/tech/httqing-qiu-fan-hui-bian-ma-da-quan-yi-ji-jie-shi-fen-lei/"/>
      <url>/tech/httqing-qiu-fan-hui-bian-ma-da-quan-yi-ji-jie-shi-fen-lei/</url>
      <content type="html"><![CDATA[<blockquote><p>原文地址：<a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" target="_blank" rel="noopener">https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</a></p></blockquote><h1 id="Status-Code-Definitions"><a href="#Status-Code-Definitions" class="headerlink" title="Status Code Definitions"></a>Status Code Definitions</h1><p>Each Status-Code is described below, including a description of which method(s) it can follow and any metainformation required in the response.<br><a id="more"></a></p><h1 id="Informational-1xx"><a href="#Informational-1xx" class="headerlink" title="Informational 1xx"></a>Informational 1xx</h1><p>This class of status code indicates a provisional response, consisting only of the Status-Line and optional headers, and is terminated by an empty line. There are no required headers for this class of status code. Since HTTP/1.0 did not define any 1xx status codes, servers MUST NOT send a 1xx response to an HTTP/1.0 client except under experimental conditions.</p><p>A client MUST be prepared to accept one or more 1xx status responses prior to a regular response, even if the client does not expect a 100 (Continue) status message. Unexpected 1xx status responses MAY be ignored by a user agent.</p><p>Proxies MUST forward 1xx responses, unless the connection between the proxy and its client has been closed, or unless the proxy itself requested the generation of the 1xx response. (For example, if a</p><p>proxy adds a “Expect: 100-continue” field when it forwards a request, then it need not forward the corresponding 100 (Continue) response(s).)</p><h2 id="100-Continue"><a href="#100-Continue" class="headerlink" title="100 Continue"></a>100 Continue</h2><p>The client SHOULD continue with its request. This interim response is used to inform the client that the initial part of the request has been received and has not yet been rejected by the server. The client SHOULD continue by sending the remainder of the request or, if the request has already been completed, ignore this response. The server MUST send a final response after the request has been completed. See section 8.2.3 for detailed discussion of the use and handling of this status code.</p><h2 id="101-Switching-Protocols"><a href="#101-Switching-Protocols" class="headerlink" title="101 Switching Protocols"></a>101 Switching Protocols</h2><p>The server understands and is willing to comply with the client’s request, via the Upgrade message header field (section 14.42), for a change in the application protocol being used on this connection. The server will switch protocols to those defined by the response’s Upgrade header field immediately after the empty line which terminates the 101 response.</p><p>The protocol SHOULD be switched only when it is advantageous to do so. For example, switching to a newer version of HTTP is advantageous over older versions, and switching to a real-time, synchronous protocol might be advantageous when delivering resources that use such features.</p><h1 id="Successful-2xx"><a href="#Successful-2xx" class="headerlink" title="Successful 2xx"></a>Successful 2xx</h1><p>This class of status code indicates that the client’s request was successfully received, understood, and accepted.</p><h2 id="200-OK"><a href="#200-OK" class="headerlink" title="200 OK"></a>200 OK</h2><p>The request has succeeded. The information returned with the response is dependent on the method used in the request, for example:</p><p>GET an entity corresponding to the requested resource is sent in the response;</p><p>HEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body;</p><p>POST an entity describing or containing the result of the action;</p><p>TRACE an entity containing the request message as received by the end server.</p><h2 id="201-Created"><a href="#201-Created" class="headerlink" title="201 Created"></a>201 Created</h2><p>The request has been fulfilled and resulted in a new resource being created. The newly created resource can be referenced by the URI(s) returned in the entity of the response, with the most specific URI for the resource given by a Location header field. The response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. The origin server MUST create the resource before returning the 201 status code. If the action cannot be carried out immediately, the server SHOULD respond with 202 (Accepted) response instead.</p><p>A 201 response MAY contain an ETag response header field indicating the current value of the entity tag for the requested variant just created, see section 14.19.</p><h2 id="202-Accepted"><a href="#202-Accepted" class="headerlink" title="202 Accepted"></a>202 Accepted</h2><p>The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place. There is no facility for re-sending a status code from an asynchronous operation such as this.</p><p>The 202 response is intentionally non-committal. Its purpose is to allow a server to accept a request for some other process (perhaps a batch-oriented process that is only run once per day) without requiring that the user agent’s connection to the server persist until the process is completed. The entity returned with this response SHOULD include an indication of the request’s current status and either a pointer to a status monitor or some estimate of when the user can expect the request to be fulfilled.</p><h2 id="203-Non-Authoritative-Information"><a href="#203-Non-Authoritative-Information" class="headerlink" title="203 Non-Authoritative Information"></a>203 Non-Authoritative Information</h2><p>The returned metainformation in the entity-header is not the definitive set as available from the origin server, but is gathered from a local or a third-party copy. The set presented MAY be a subset or superset of the original version. For example, including local annotation information about the resource might result in a superset of the metainformation known by the origin server. Use of this response code is not required and is only appropriate when the response would otherwise be 200 (OK).</p><h2 id="204-No-Content"><a href="#204-No-Content" class="headerlink" title="204 No Content"></a>204 No Content</h2><p>The server has fulfilled the request but does not need to return an entity-body, and might want to return updated metainformation. The response MAY include new or updated metainformation in the form of entity-headers, which if present SHOULD be associated with the requested variant.</p><p>If the client is a user agent, it SHOULD NOT change its document view from that which caused the request to be sent. This response is primarily intended to allow input for actions to take place without causing a change to the user agent’s active document view, although any new or updated metainformation SHOULD be applied to the document currently in the user agent’s active view.</p><p>The 204 response MUST NOT include a message-body, and thus is always terminated by the first empty line after the header fields.</p><h2 id="205-Reset-Content"><a href="#205-Reset-Content" class="headerlink" title="205 Reset Content"></a>205 Reset Content</h2><p>The server has fulfilled the request and the user agent SHOULD reset the document view which caused the request to be sent. This response is primarily intended to allow input for actions to take place via user input, followed by a clearing of the form in which the input is given so that the user can easily initiate another input action. The response MUST NOT include an entity.</p><h2 id="206-Partial-Content"><a href="#206-Partial-Content" class="headerlink" title="206 Partial Content"></a>206 Partial Content</h2><p>The server has fulfilled the partial GET request for the resource. The request MUST have included a Range header field (section 14.35) indicating the desired range, and MAY have included an If-Range header field (section 14.27) to make the request conditional.</p><p>The response MUST include the following header fields:</p><pre><code>- Either a Content-Range header field (section 14.16) indicating  the range included with this response, or a multipart/byteranges  Content-Type including Content-Range fields for each part. If a  Content-Length header field is present in the response, its  value MUST match the actual number of OCTETs transmitted in the  message-body.- Date- ETag and/or Content-Location, if the header would have been sent  in a 200 response to the same request- Expires, Cache-Control, and/or Vary, if the field-value might  differ from that sent in any previous response for the same  variant</code></pre><p>If the 206 response is the result of an If-Range request that used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. If the response is the result of an If-Range request that used a weak validator, the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers. Otherwise, the response MUST include all of the entity-headers that would have been returned with a 200 (OK) response to the same request.</p><p>A cache MUST NOT combine a 206 response with other previously cached content if the ETag or Last-Modified headers do not match exactly, see 13.5.4.</p><p>A cache that does not support the Range and Content-Range headers MUST NOT cache 206 (Partial) responses.</p><h1 id="Redirection-3xx"><a href="#Redirection-3xx" class="headerlink" title="Redirection 3xx"></a>Redirection 3xx</h1><p>This class of status code indicates that further action needs to be taken by the user agent in order to fulfill the request. The action required MAY be carried out by the user agent without interaction with the user if and only if the method used in the second request is GET or HEAD. A client SHOULD detect infinite redirection loops, since such loops generate network traffic for each redirection.</p><pre><code>Note: previous versions of this specification recommended amaximum of five redirections. Content developers should be awarethat there might be clients that implement such a fixedlimitation.</code></pre><h2 id="300-Multiple-Choices"><a href="#300-Multiple-Choices" class="headerlink" title="300 Multiple Choices"></a>300 Multiple Choices</h2><p>The requested resource corresponds to any one of a set of representations, each with its own specific location, and agent- driven negotiation information (section 12) is being provided so that the user (or user agent) can select a preferred representation and redirect its request to that location.</p><p>Unless it was a HEAD request, the response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content- Type header field. Depending upon the format and the capabilities of</p><p>the user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.</p><p>If the server has a preferred choice of representation, it SHOULD include the specific URI for that representation in the Location field; user agents MAY use the Location field value for automatic redirection. This response is cacheable unless indicated otherwise.</p><h2 id="301-Moved-Permanently"><a href="#301-Moved-Permanently" class="headerlink" title="301 Moved Permanently"></a>301 Moved Permanently</h2><p>The requested resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. Clients with link editing capabilities ought to automatically re-link references to the Request-URI to one or more of the new references returned by the server, where possible. This response is cacheable unless indicated otherwise.</p><p>The new permanent URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</p><p>If the 301 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</p><pre><code>Note: When automatically redirecting a POST request afterreceiving a 301 status code, some existing HTTP/1.0 user agentswill erroneously change it into a GET request.</code></pre><h2 id="302-Found"><a href="#302-Found" class="headerlink" title="302 Found"></a>302 Found</h2><p>The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.</p><p>The temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</p><p>If the 302 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</p><pre><code>Note: RFC 1945 and RFC 2068 specify that the client is not allowedto change the method on the redirected request.  However, mostexisting user agent implementations treat 302 as if it were a 303response, performing a GET on the Location field-value regardlessof the original request method. The status codes 303 and 307 havebeen added for servers that wish to make unambiguously clear whichkind of reaction is expected of the client.</code></pre><h2 id="303-See-Other"><a href="#303-See-Other" class="headerlink" title="303 See Other"></a>303 See Other</h2><p>The response to the request can be found under a different URI and SHOULD be retrieved using a GET method on that resource. This method exists primarily to allow the output of a POST-activated script to redirect the user agent to a selected resource. The new URI is not a substitute reference for the originally requested resource. The 303 response MUST NOT be cached, but the response to the second (redirected) request might be cacheable.</p><p>The different URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</p><pre><code>Note: Many pre-HTTP/1.1 user agents do not understand the 303status. When interoperability with such clients is a concern, the302 status code may be used instead, since most user agents reactto a 302 response as described here for 303.</code></pre><h2 id="304-Not-Modified"><a href="#304-Not-Modified" class="headerlink" title="304 Not Modified"></a>304 Not Modified</h2><p>If the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code. The 304 response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields.</p><p>The response MUST include the following header fields:</p><pre><code>- Date, unless its omission is required by section 14.18.1</code></pre><p>If a clockless origin server obeys these rules, and proxies and clients add their own Date to any response received without one (as already specified by [RFC 2068], section 14.19), caches will operate correctly.</p><pre><code>- ETag and/or Content-Location, if the header would have been sent  in a 200 response to the same request- Expires, Cache-Control, and/or Vary, if the field-value might  differ from that sent in any previous response for the same  variant</code></pre><p>If the conditional GET used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. Otherwise (i.e., the conditional GET used a weak validator), the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers.</p><p>If a 304 response indicates an entity not currently cached, then the cache MUST disregard the response and repeat the request without the conditional.</p><p>If a cache uses a received 304 response to update a cache entry, the cache MUST update the entry to reflect any new field values given in the response.</p><h2 id="305-Use-Proxy"><a href="#305-Use-Proxy" class="headerlink" title="305 Use Proxy"></a>305 Use Proxy</h2><p>The requested resource MUST be accessed through the proxy given by the Location field. The Location field gives the URI of the proxy. The recipient is expected to repeat this single request via the proxy. 305 responses MUST only be generated by origin servers.</p><pre><code>Note: RFC 2068 was not clear that 305 was intended to redirect asingle request, and to be generated by origin servers only.  Notobserving these limitations has significant security consequences.</code></pre><h2 id="306-Unused"><a href="#306-Unused" class="headerlink" title="306 (Unused)"></a>306 (Unused)</h2><p>The 306 status code was used in a previous version of the specification, is no longer used, and the code is reserved.</p><h2 id="307-Temporary-Redirect"><a href="#307-Temporary-Redirect" class="headerlink" title="307 Temporary Redirect"></a>307 Temporary Redirect</h2><p>The requested resource resides temporarily under a different URI. Since the redirection MAY be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.</p><p>The temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s) , since many pre-HTTP/1.1 user agents do not understand the 307 status. Therefore, the note SHOULD contain the information necessary for a user to repeat the original request on the new URI.</p><p>If the 307 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</p><h1 id="Client-Error-4xx"><a href="#Client-Error-4xx" class="headerlink" title="Client Error 4xx"></a>Client Error 4xx</h1><p>The 4xx class of status code is intended for cases in which the client seems to have erred. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. These status codes are applicable to any request method. User agents SHOULD display any included entity to the user.</p><p>If the client is sending data, a server implementation using TCP SHOULD be careful to ensure that the client acknowledges receipt of the packet(s) containing the response, before the server closes the input connection. If the client continues sending data to the server after the close, the server’s TCP stack will send a reset packet to the client, which may erase the client’s unacknowledged input buffers before they can be read and interpreted by the HTTP application.</p><h2 id="400-Bad-Request"><a href="#400-Bad-Request" class="headerlink" title="400 Bad Request"></a>400 Bad Request</h2><p>The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.</p><h2 id="401-Unauthorized"><a href="#401-Unauthorized" class="headerlink" title="401 Unauthorized"></a>401 Unauthorized</h2><p>The request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field (section 14.8). If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in “HTTP Authentication: Basic and Digest Access Authentication” [43].</p><h2 id="402-Payment-Required"><a href="#402-Payment-Required" class="headerlink" title="402 Payment Required"></a>402 Payment Required</h2><p>This code is reserved for future use.</p><h2 id="403-Forbidden"><a href="#403-Forbidden" class="headerlink" title="403 Forbidden"></a>403 Forbidden</h2><p>The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.</p><h2 id="404-Not-Found"><a href="#404-Not-Found" class="headerlink" title="404 Not Found"></a>404 Not Found</h2><p>The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent. The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address. This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable.</p><h2 id="405-Method-Not-Allowed"><a href="#405-Method-Not-Allowed" class="headerlink" title="405 Method Not Allowed"></a>405 Method Not Allowed</h2><p>The method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource.</p><h2 id="406-Not-Acceptable"><a href="#406-Not-Acceptable" class="headerlink" title="406 Not Acceptable"></a>406 Not Acceptable</h2><p>The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.</p><p>Unless it was a HEAD request, the response SHOULD include an entity containing a list of available entity characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. Depending upon the format and the capabilities of the user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.</p><pre><code>Note: HTTP/1.1 servers are allowed to return responses which arenot acceptable according to the accept headers sent in therequest. In some cases, this may even be preferable to sending a406 response. User agents are encouraged to inspect the headers ofan incoming response to determine if it is acceptable.</code></pre><p>If the response could be unacceptable, a user agent SHOULD temporarily stop receipt of more data and query the user for a decision on further actions.</p><h2 id="407-Proxy-Authentication-Required"><a href="#407-Proxy-Authentication-Required" class="headerlink" title="407 Proxy Authentication Required"></a>407 Proxy Authentication Required</h2><p>This code is similar to 401 (Unauthorized), but indicates that the client must first authenticate itself with the proxy. The proxy MUST return a Proxy-Authenticate header field (section 14.33) containing a challenge applicable to the proxy for the requested resource. The client MAY repeat the request with a suitable Proxy-Authorization header field (section 14.34). HTTP access authentication is explained in “HTTP Authentication: Basic and Digest Access Authentication” [43].</p><h2 id="408-Request-Timeout"><a href="#408-Request-Timeout" class="headerlink" title="408 Request Timeout"></a>408 Request Timeout</h2><p>The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.</p><h2 id="409-Conflict"><a href="#409-Conflict" class="headerlink" title="409 Conflict"></a>409 Conflict</h2><p>The request could not be completed due to a conflict with the current state of the resource. This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request. The response body SHOULD include enough</p><p>information for the user to recognize the source of the conflict. Ideally, the response entity would include enough information for the user or user agent to fix the problem; however, that might not be possible and is not required.</p><p>Conflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the entity being PUT included changes to a resource which conflict with those made by an earlier (third-party) request, the server might use the 409 response to indicate that it can’t complete the request. In this case, the response entity would likely contain a list of the differences between the two versions in a format defined by the response Content-Type.</p><h2 id="410-Gone"><a href="#410-Gone" class="headerlink" title="410 Gone"></a>410 Gone</h2><p>The requested resource is no longer available at the server and no forwarding address is known. This condition is expected to be considered permanent. Clients with link editing capabilities SHOULD delete references to the Request-URI after user approval. If the server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) SHOULD be used instead. This response is cacheable unless indicated otherwise.</p><p>The 410 response is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable and that the server owners desire that remote links to that resource be removed. Such an event is common for limited-time, promotional services and for resources belonging to individuals no longer working at the server’s site. It is not necessary to mark all permanently unavailable resources as “gone” or to keep the mark for any length of time – that is left to the discretion of the server owner.</p><h2 id="411-Length-Required"><a href="#411-Length-Required" class="headerlink" title="411 Length Required"></a>411 Length Required</h2><p>The server refuses to accept the request without a defined Content- Length. The client MAY repeat the request if it adds a valid Content-Length header field containing the length of the message-body in the request message.</p><h2 id="412-Precondition-Failed"><a href="#412-Precondition-Failed" class="headerlink" title="412 Precondition Failed"></a>412 Precondition Failed</h2><p>The precondition given in one or more of the request-header fields evaluated to false when it was tested on the server. This response code allows the client to place preconditions on the current resource metainformation (header field data) and thus prevent the requested method from being applied to a resource other than the one intended.</p><h2 id="413-Request-Entity-Too-Large"><a href="#413-Request-Entity-Too-Large" class="headerlink" title="413 Request Entity Too Large"></a>413 Request Entity Too Large</h2><p>The server is refusing to process a request because the request entity is larger than the server is willing or able to process. The server MAY close the connection to prevent the client from continuing the request.</p><p>If the condition is temporary, the server SHOULD include a Retry- After header field to indicate that it is temporary and after what time the client MAY try again.</p><h2 id="414-Request-URI-Too-Long"><a href="#414-Request-URI-Too-Long" class="headerlink" title="414 Request-URI Too Long"></a>414 Request-URI Too Long</h2><p>The server is refusing to service the request because the Request-URI is longer than the server is willing to interpret. This rare condition is only likely to occur when a client has improperly converted a POST request to a GET request with long query information, when the client has descended into a URI “black hole” of redirection (e.g., a redirected URI prefix that points to a suffix of itself), or when the server is under attack by a client attempting to exploit security holes present in some servers using fixed-length buffers for reading or manipulating the Request-URI.</p><h2 id="415-Unsupported-Media-Type"><a href="#415-Unsupported-Media-Type" class="headerlink" title="415 Unsupported Media Type"></a>415 Unsupported Media Type</h2><p>The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method.</p><h2 id="416-Requested-Range-Not-Satisfiable"><a href="#416-Requested-Range-Not-Satisfiable" class="headerlink" title="416 Requested Range Not Satisfiable"></a>416 Requested Range Not Satisfiable</h2><p>A server SHOULD return a response with this status code if a request included a Range request-header field (section 14.35), and none of the range-specifier values in this field overlap the current extent of the selected resource, and the request did not include an If-Range request-header field. (For byte-ranges, this means that the first- byte-pos of all of the byte-range-spec values were greater than the current length of the selected resource.)</p><p>When this status code is returned for a byte-range request, the response SHOULD include a Content-Range entity-header field specifying the current length of the selected resource (see section 14.16). This response MUST NOT use the multipart/byteranges content- type.</p><h2 id="417-Expectation-Failed"><a href="#417-Expectation-Failed" class="headerlink" title="417 Expectation Failed"></a>417 Expectation Failed</h2><p>The expectation given in an Expect request-header field (see section 14.20) could not be met by this server, or, if the server is a proxy, the server has unambiguous evidence that the request could not be met by the next-hop server.</p><h1 id="Server-Error-5xx"><a href="#Server-Error-5xx" class="headerlink" title="Server Error 5xx"></a>Server Error 5xx</h1><p>Response status codes beginning with the digit “5” indicate cases in which the server is aware that it has erred or is incapable of performing the request. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. User agents SHOULD display any included entity to the user. These response codes are applicable to any request method.</p><h2 id="500-Internal-Server-Error"><a href="#500-Internal-Server-Error" class="headerlink" title="500 Internal Server Error"></a>500 Internal Server Error</h2><p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p><h2 id="501-Not-Implemented"><a href="#501-Not-Implemented" class="headerlink" title="501 Not Implemented"></a>501 Not Implemented</h2><p>The server does not support the functionality required to fulfill the request. This is the appropriate response when the server does not recognize the request method and is not capable of supporting it for any resource.</p><h2 id="502-Bad-Gateway"><a href="#502-Bad-Gateway" class="headerlink" title="502 Bad Gateway"></a>502 Bad Gateway</h2><p>The server, while acting as a gateway or proxy, received an invalid response from the upstream server it accessed in attempting to fulfill the request.</p><h2 id="503-Service-Unavailable"><a href="#503-Service-Unavailable" class="headerlink" title="503 Service Unavailable"></a>503 Service Unavailable</h2><p>The server is currently unable to handle the request due to a temporary overloading or maintenance of the server. The implication is that this is a temporary condition which will be alleviated after some delay. If known, the length of the delay MAY be indicated in a Retry-After header. If no Retry-After is given, the client SHOULD handle the response as it would for a 500 response.</p><pre><code>Note: The existence of the 503 status code does not imply that aserver must use it when becoming overloaded. Some servers may wishto simply refuse the connection.</code></pre><h2 id="504-Gateway-Timeout"><a href="#504-Gateway-Timeout" class="headerlink" title="504 Gateway Timeout"></a>504 Gateway Timeout</h2><p>The server, while acting as a gateway or proxy, did not receive a timely response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP) or some other auxiliary server (e.g. DNS) it needed to access in attempting to complete the request.</p><pre><code>Note: Note to implementors: some deployed proxies are known toreturn 400 or 500 when DNS lookups time out.</code></pre><h2 id="505-HTTP-Version-Not-Supported"><a href="#505-HTTP-Version-Not-Supported" class="headerlink" title="505 HTTP Version Not Supported"></a>505 HTTP Version Not Supported</h2><p>The server does not support, or refuses to support, the HTTP protocol version that was used in the request message. The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in section 3.1, other than with this error message. The response SHOULD contain an entity describing why that version is not supported and what other protocols are supported by that server.</p>]]></content>
      
      <categories>
          
          <category> 技术杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Http </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot使用hibernate-validator利用AOP实现统一参数校验</title>
      <link href="/java/spring-boot/springbootshi-yong-hibernate-validatorli-yong-aop/"/>
      <url>/java/spring-boot/springbootshi-yong-hibernate-validatorli-yong-aop/</url>
      <content type="html"><![CDATA[<h1 id="引入maven包"><a href="#引入maven包" class="headerlink" title="引入maven包"></a>引入maven包</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.el<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1-b08<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="注入Validator的bean"><a href="#注入Validator的bean" class="headerlink" title="注入Validator的bean"></a>注入Validator的bean</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qianxunclub.starter.web.autoconfigure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.HibernateValidator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Validation;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Validator;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ValidatorFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chihiro.zhang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidatorConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Validator <span class="title">getValidatorFactory</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ValidatorFactory validatorFactory = Validation.byProvider(HibernateValidator.class).configure().failFast(<span class="keyword">true</span>).buildValidatorFactory();</span><br><span class="line">        <span class="keyword">return</span> validatorFactory.getValidator();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加参数校验的AOP"><a href="#添加参数校验的AOP" class="headerlink" title="添加参数校验的AOP"></a>添加参数校验的AOP</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qianxunclub.starter.web.validator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.qianxunclub.common.framework.constant.CommonReturnCode;</span><br><span class="line"><span class="keyword">import</span> com.qianxunclub.common.framework.response.Result;</span><br><span class="line"><span class="keyword">import</span> com.qianxunclub.utils.HttpResponseUtil;</span><br><span class="line"><span class="keyword">import</span> com.qianxunclub.utils.JsonUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.Signature;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintViolation;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Path;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Validator;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chihiro.zhang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidatorAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Validator validator;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//定义校验的包位置</span></span><br><span class="line">      <span class="meta">@Pointcut</span>(<span class="string">"execution(* com.qianxunclub..*.web.*.*(..))"</span>)</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pointcut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入参校验</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> joinPoint</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Throwable</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"pointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">execute</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Result result = Result.newBuilder().build();</span><br><span class="line">        String methodName = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Signature sig = joinPoint.getSignature();</span><br><span class="line">            MethodSignature msig = (MethodSignature) sig;</span><br><span class="line">            Object target = joinPoint.getTarget();</span><br><span class="line">            Method currentMethod = target.getClass().getMethod(msig.getName(), msig.getParameterTypes());</span><br><span class="line">            methodName = currentMethod.getName();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.debug(<span class="string">"无法获取方法名称"</span> ,e);</span><br><span class="line">        &#125;</span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        <span class="keyword">for</span> (Object arg : args)&#123;</span><br><span class="line">            log.debug(<span class="string">"→→→→→"</span> + methodName + <span class="string">"&gt;&gt;&gt;&gt;Into parameter :"</span> + JsonUtil.objectToJson(arg));</span><br><span class="line">            <span class="keyword">if</span>(arg != <span class="keyword">null</span>)&#123;</span><br><span class="line">                Set&lt;ConstraintViolation&lt;Object&gt;&gt; constraintViolations = validator.validate(arg);</span><br><span class="line">                <span class="keyword">if</span>(constraintViolations.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span> (ConstraintViolation&lt;Object&gt; constraintViolation : constraintViolations) &#123;</span><br><span class="line">                        Path property = constraintViolation.getPropertyPath();</span><br><span class="line">                        String name = property.iterator().next().getName();</span><br><span class="line">                        result = Result.newBuilder().fail().code(CommonReturnCode.PARAM_ERROR).message(<span class="string">"["</span> + name + <span class="string">"]"</span> + constraintViolation.getMessage()).build();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">                    HttpServletResponse response = attributes.getResponse();</span><br><span class="line">                    String responseStr = JsonUtil.objectToJson(result);</span><br><span class="line">                    log.error(responseStr);</span><br><span class="line">                    log.debug(<span class="string">"→→→→→"</span> + methodName + <span class="string">"&gt;&gt;&gt;&gt;Return to the result :"</span> + responseStr);</span><br><span class="line">                    HttpResponseUtil.setResponseJsonBody(response,responseStr);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Object object = joinPoint.proceed();</span><br><span class="line">        log.debug(<span class="string">"→→→→→"</span> + methodName + <span class="string">"&gt;&gt;&gt;&gt;Return to the result :"</span> + JsonUtil.objectToJson(object));</span><br><span class="line">        <span class="keyword">return</span> object;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面<code>@Pointcut(&quot;execution(* com.gwghk..*.web.*.*(..))&quot;)为Controller</code>切点位置<br>BaseResponse为一个统一返回对象，这个可以自定义</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>使用是需要再Controller入参对象添加校验注解即可：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegisteProxyParam</span> </span>&#123;</span><br><span class="line">    <span class="meta">@NotEmpty</span></span><br><span class="line">    <span class="keyword">private</span> String appId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Java </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kafka发送消息问题，could not be resolved</title>
      <link href="/exception/kafka-exception-could-not-be-resolved/"/>
      <url>/exception/kafka-exception-could-not-be-resolved/</url>
      <content type="html"><![CDATA[<h1 id="异常描述"><a href="#异常描述" class="headerlink" title="异常描述"></a>异常描述</h1><p>我用的阿里云服务器，我在服务器上面安装了一个kafka<br>为啥不能发送的，百度了好多 说啥DNS不对.</p><p><code>2016/09/18 11:11:46 [error] 5720#0: [lua] producer.lua:258: buffered messages send to kafka err: iz9405kumw9z could not be resolved (3: Host not found), retryable: true, topic: lualog, partition_id: 0, length: 1, context: ngx.timer, clie nt: 183.12.65.116, server: 0.0.0.0:80</code><br><a id="more"></a><br>kafka配置文件（config/server.properties）： </p><p><img src="http://img.ask.csdn.net/upload/201609/18/1474168727_238864.png" alt=""></p><p>nginx日志：<br><img src="http://img.ask.csdn.net/upload/201609/18/1474168585_423649.png" alt=""></p><h1 id="异常分析"><a href="#异常分析" class="headerlink" title="异常分析"></a>异常分析</h1><p>从异常看，很明显是HOST访问不了，于是乎，要从Kfka网络配置入手了。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p><img src="http://img.ask.csdn.net/upload/201609/18/1474186554_681266.png" alt=""></p><p>使用下面这个地址 我写的是内网IP地址，换成外网的就可以正常使用了！</p>]]></content>
      
      <categories>
          
          <category> 异常记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exception </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>缓存穿透，缓存击穿，缓存雪崩解决方案分析</title>
      <link href="/cache/huan-cun-chuan-tou-huan-cun-ji-chuan-huan-cun-xue-beng-jie-jue-fang-an-fen-xi/"/>
      <url>/cache/huan-cun-chuan-tou-huan-cun-ji-chuan-huan-cun-xue-beng-jie-jue-fang-an-fen-xi/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>设计一个缓存系统，不得不要考虑的问题就是：缓存穿透、缓存击穿与失效时的雪崩效应。</p><h1 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h1><p>缓存穿透是指查询一个一定不存在的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。在流量大时，可能DB就挂掉了，要是有人利用不存在的key频繁攻击我们的应用，这就是漏洞。<br><a id="more"></a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>有很多种方法可以有效地解决缓存穿透问题，最常见的则是采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被 这个bitmap拦截掉，从而避免了对底层存储系统的查询压力。另外也有一个更为简单粗暴的方法（我们采用的就是这种），如果一个查询返回的数据为空（不管是数 据不存在，还是系统故障），我们仍然把这个空结果进行缓存，但它的过期时间会很短，最长不超过五分钟。</p><h1 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h1><p>缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到DB，DB瞬时压力过重雪崩。</p><h2 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h2><p>缓存失效时的雪崩效应对底层系统的冲击非常可怕。大多数系统设计者考虑用加锁或者队列的方式保证缓存的单线 程（进程）写，从而避免失效时大量的并发请求落到底层存储系统上。这里分享一个简单方案就时讲缓存失效时间分散开，比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。</p><h1 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h1><p>对于一些设置了过期时间的key，如果这些key可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。这个时候，需要考虑一个问题：缓存被“击穿”的问题，这个和缓存雪崩的区别在于这里针对某一key缓存，前者则是很多key。</p><p>缓存在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p><h2 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="1-使用互斥锁-mutex-key"><a href="#1-使用互斥锁-mutex-key" class="headerlink" title="1.使用互斥锁(mutex key)"></a>1.使用互斥锁(mutex key)</h3><p>业界比较常用的做法，是使用mutex。简单地来说，就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db，而是先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX或者Memcache的ADD）去set一个mutex key，当操作返回成功时，再进行load db的操作并回设缓存；否则，就重试整个get缓存的方法。</p><p>SETNX，是「SET if Not eXists」的缩写，也就是只有不存在的时候才设置，可以利用它来实现锁的效果。在redis2.6.1之前版本未实现setnx的过期时间，所以这里给出两种版本代码参考：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.6.1前单机版本锁  </span></span><br><span class="line"><span class="function">String <span class="title">get</span><span class="params">(String key)</span> </span>&#123;    </span><br><span class="line">   String value = redis.get(key);    </span><br><span class="line">   <span class="keyword">if</span> (value  == <span class="keyword">null</span>) &#123;    </span><br><span class="line">    <span class="keyword">if</span> (redis.setnx(key_mutex, <span class="string">"1"</span>)) &#123;    </span><br><span class="line">        <span class="comment">// 3 min timeout to avoid mutex holder crash    </span></span><br><span class="line">        redis.expire(key_mutex, <span class="number">3</span> * <span class="number">60</span>)    </span><br><span class="line">        value = db.get(key);    </span><br><span class="line">        redis.set(key, value);    </span><br><span class="line">        redis.delete(key_mutex);    </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;    </span><br><span class="line">        <span class="comment">//其他线程休息50毫秒后重试    </span></span><br><span class="line">        Thread.sleep(<span class="number">50</span>);    </span><br><span class="line">        get(key);    </span><br><span class="line">    &#125;    </span><br><span class="line">  &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最新版本代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(key)</span> </span>&#123;  </span><br><span class="line">      String value = redis.get(key);  </span><br><span class="line">      <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123; <span class="comment">//代表缓存值过期  </span></span><br><span class="line">          <span class="comment">//设置3min的超时，防止del操作失败的时候，下次缓存过期一直不能load db  </span></span><br><span class="line">          <span class="keyword">if</span> (redis.setnx(key_mutex, <span class="number">1</span>, <span class="number">3</span> * <span class="number">60</span>) == <span class="number">1</span>) &#123;  <span class="comment">//代表设置成功  </span></span><br><span class="line">               value = db.get(key);  </span><br><span class="line">                      redis.set(key, value, expire_secs);  </span><br><span class="line">                      redis.del(key_mutex);  </span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;  <span class="comment">//这个时候代表同时候的其他线程已经load db并回设到缓存了，这时候重试获取缓存值即可  </span></span><br><span class="line">                      sleep(<span class="number">50</span>);  </span><br><span class="line">                      get(key);  <span class="comment">//重试  </span></span><br><span class="line">              &#125;  </span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">              <span class="keyword">return</span> value;        </span><br><span class="line">          &#125;  </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>memcache代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (memcache.get(key) == <span class="keyword">null</span>) &#123;    </span><br><span class="line">    <span class="comment">// 3 min timeout to avoid mutex holder crash    </span></span><br><span class="line">    <span class="keyword">if</span> (memcache.add(key_mutex, <span class="number">3</span> * <span class="number">60</span> * <span class="number">1000</span>) == <span class="keyword">true</span>) &#123;    </span><br><span class="line">        value = db.get(key);    </span><br><span class="line">        memcache.set(key, value);    </span><br><span class="line">        memcache.delete(key_mutex);    </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;    </span><br><span class="line">        sleep(<span class="number">50</span>);    </span><br><span class="line">        retry();    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-“提前”使用互斥锁-mutex-key-："><a href="#2-“提前”使用互斥锁-mutex-key-：" class="headerlink" title="2. “提前”使用互斥锁(mutex key)："></a>2. “提前”使用互斥锁(mutex key)：</h3><p>在value内部设置1个超时值(timeout1), timeout1比实际的memcache timeout(timeout2)小。当从cache读取到timeout1发现它已经过期时候，马上延长timeout1并重新设置到cache。然后再从数据库加载数据并设置到cache中。伪代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">v = memcache.get(key);    </span><br><span class="line"><span class="keyword">if</span> (v == <span class="keyword">null</span>) &#123;    </span><br><span class="line">    <span class="keyword">if</span> (memcache.add(key_mutex, <span class="number">3</span> * <span class="number">60</span> * <span class="number">1000</span>) == <span class="keyword">true</span>) &#123;    </span><br><span class="line">        value = db.get(key);    </span><br><span class="line">        memcache.set(key, value);    </span><br><span class="line">        memcache.delete(key_mutex);    </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;    </span><br><span class="line">        sleep(<span class="number">50</span>);    </span><br><span class="line">        retry();    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;    </span><br><span class="line">    <span class="keyword">if</span> (v.timeout &lt;= now()) &#123;    </span><br><span class="line">        <span class="keyword">if</span> (memcache.add(key_mutex, <span class="number">3</span> * <span class="number">60</span> * <span class="number">1000</span>) == <span class="keyword">true</span>) &#123;    </span><br><span class="line">            <span class="comment">// extend the timeout for other threads    </span></span><br><span class="line">            v.timeout += <span class="number">3</span> * <span class="number">60</span> * <span class="number">1000</span>;    </span><br><span class="line">            memcache.set(key, v, KEY_TIMEOUT * <span class="number">2</span>);    </span><br><span class="line">    </span><br><span class="line">            <span class="comment">// load the latest value from db    </span></span><br><span class="line">            v = db.get(key);    </span><br><span class="line">            v.timeout = KEY_TIMEOUT;    </span><br><span class="line">            memcache.set(key, value, KEY_TIMEOUT * <span class="number">2</span>);    </span><br><span class="line">            memcache.delete(key_mutex);    </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;    </span><br><span class="line">            sleep(<span class="number">50</span>);    </span><br><span class="line">            retry();    </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="3-“永远不过期”："><a href="#3-“永远不过期”：" class="headerlink" title="3. “永远不过期”："></a>3. “永远不过期”：</h3><p>这里的“永远不过期”包含两层意思：</p><ul><li>(1) 从redis上看，确实没有设置过期时间，这就保证了，不会出现热点key过期问题，也就是“物理”不过期。</li><li>(2) 从功能上看，如果不过期，那不就成静态的了吗？所以我们把过期时间存在key对应的value里，如果发现要过期了，通过一个后台的异步线程进行缓存的构建，也就是“逻辑”过期</li></ul><p>从实战看，这种方法对于性能非常友好，唯一不足的就是构建缓存时候，其余线程(非构建缓存的线程)可能访问的是老数据，但是对于一般的互联网功能来说这个还是可以忍受。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">get</span><span class="params">(<span class="keyword">final</span> String key)</span> </span>&#123;    </span><br><span class="line">        V v = redis.get(key);    </span><br><span class="line">        String value = v.getValue();    </span><br><span class="line">        <span class="keyword">long</span> timeout = v.getTimeout();    </span><br><span class="line">        <span class="keyword">if</span> (v.timeout &lt;= System.currentTimeMillis()) &#123;    </span><br><span class="line">            <span class="comment">// 异步更新后台异常执行    </span></span><br><span class="line">            threadPool.execute(<span class="keyword">new</span> Runnable() &#123;    </span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;    </span><br><span class="line">                    String keyMutex = <span class="string">"mutex:"</span> + key;    </span><br><span class="line">                    <span class="keyword">if</span> (redis.setnx(keyMutex, <span class="string">"1"</span>)) &#123;    </span><br><span class="line">                        <span class="comment">// 3 min timeout to avoid mutex holder crash    </span></span><br><span class="line">                        redis.expire(keyMutex, <span class="number">3</span> * <span class="number">60</span>);    </span><br><span class="line">                        String dbValue = db.get(key);    </span><br><span class="line">                        redis.set(key, dbValue);    </span><br><span class="line">                        redis.delete(keyMutex);    </span><br><span class="line">                    &#125;    </span><br><span class="line">                &#125;    </span><br><span class="line">            &#125;);    </span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> value;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-资源保护："><a href="#4-资源保护：" class="headerlink" title="4. 资源保护："></a>4. 资源保护：</h3><p>采用netflix的hystrix，可以做资源的隔离保护主线程池，如果把这个应用到缓存的构建也未尝不可。</p><p>四种解决方案：没有最佳只有最合适</p><h4 id="一、简单分布式互斥锁（mutex-key）"><a href="#一、简单分布式互斥锁（mutex-key）" class="headerlink" title="一、简单分布式互斥锁（mutex key）"></a>一、简单分布式互斥锁（mutex key）</h4><p> 优点：1. 思路简单，2. 保证一致性</p><p> 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险</p><h4 id="二、“提前”使用互斥锁"><a href="#二、“提前”使用互斥锁" class="headerlink" title="二、“提前”使用互斥锁"></a>二、“提前”使用互斥锁</h4><p> 优点：1. 保证一致性</p><p> 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险</p><h4 id="三、不过期-本文"><a href="#三、不过期-本文" class="headerlink" title="三、不过期(本文)"></a>三、不过期(本文)</h4><p> 优点：1. 异步构建缓存，不会阻塞线程池</p><p> 缺点：1. 不保证一致性。2. 代码复杂度增大(每个value都要维护一个timekey)。3. 占用一定的内存空间(每个value都要维护一个timekey)。</p><h4 id="四、资源隔离组件hystrix-本文"><a href="#四、资源隔离组件hystrix-本文" class="headerlink" title="四、资源隔离组件hystrix(本文)"></a>四、资源隔离组件hystrix(本文)</h4><p> 优点：1. hystrix技术成熟，有效保证后端。2. hystrix监控强大。</p><p> 缺点：1. 部分访问存在降级策略。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>针对业务系统，永远都是具体情况具体分析，没有最好，只有最合适。</p><p>最后，对于缓存系统常见的缓存满了和数据丢失问题，需要根据具体业务分析，通常我们采用LRU策略处理溢出，Redis的RDB和AOF持久化策略来保证一定情况下的数据安全。</p>]]></content>
      
      <categories>
          
          <category> 缓存技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> 缓存 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>尼玛啊！坑爹的朋友圈！请放过我爸我妈吧！</title>
      <link href="/other/ni-ma-a-keng-die-de-peng-you-quan-qing-fang-guo-wo-ba-wo-ma-ba/"/>
      <url>/other/ni-ma-a-keng-die-de-peng-you-quan-qing-fang-guo-wo-ba-wo-ma-ba/</url>
      <content type="html"><![CDATA[<p>说真的，现在这些无良商家真特么坑爹，，这些为了骗中老年人流量的转发<br>真的很醉人，而且大部分内容都是虚假的，有的为了骗点击量，那些标题真的也是取的非常有颜色啊，喵真的都想举报了，求还给爸妈一个正常的世界，也给我们一个安静的朋友圈。</p><a id="more"></a><p>各位叔叔阿姨们，真的别相信这些了！！</p><p><img src="http://file.qianxunclub.com/aa21b7f349f74b8d9d5484a08f161d8d_th.jpeg" alt=""><br><img src="http://file.qianxunclub.com/wrwerwer.jpeg" alt=""><br><img src="http://file.qianxunclub.com/fa143c593af94139be77249449f8ccb8_th.jpeg" alt=""></p>]]></content>
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片 </tag>
            
            <tag> 搞笑 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《我的爸爸是个骗子》风靡全球</title>
      <link href="/video/my-father-is-liar/"/>
      <url>/video/my-father-is-liar/</url>
      <content type="html"><![CDATA[<p>网上一则泰国公益视频《我的爸爸是个骗子》爆红网络。这让看完视频的网友们不禁潸然泪下，直接泪目。</p><p>视频中这样一段字幕却感动了无数网友。</p><a id="more"></a><iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=e0155jhqy91&tiny=0&auto=0" allowfullscreen></iframe>  <p>Daddy is the sweetest daddy in the world;<br>爸爸是世界上最好的爸爸；  </p><p>Daddy is the most handsome, the smartest;the most clever, the kindest;<br>爸爸最帅，最机智；最聪明，最善良；  </p><p>He is my superman;<br>他就是我的超人；  </p><p>Daddy wants me to do well at school;<br>爸爸希望我学习好；  </p><p>Daddy is just great;<br>爸爸很好，  </p><p>but he lies……<br>但是，他撒谎！  </p><p>He lies about having a job;<br>他撒谎说他有工作；  </p><p>He lies about having money;<br>他撒谎说他有钱；  </p><p>He lies that he’s not tired;<br>他撒谎说他不累；  </p><p>He lies that he’s not hungry;<br>他撒谎说他不饿；  </p><p>He lies that we have everything;<br>他撒谎说我们什么都不缺；  </p><p>He lies about his happiness;<br>他撒谎说他很幸福；  </p><p>He lies because of me…<br>我知道，他撒谎是为了我幸福……  </p>]]></content>
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> 公益广告 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>自动化工具 ansible完整安装</title>
      <link href="/linux/zi-dong-hua-gong-ju-ansiblewan-zheng-an-zhuang-pi-liang-de-zai-yuan-cheng-fu-wu-qi-shang-zhi-xing-ming-ling/"/>
      <url>/linux/zi-dong-hua-gong-ju-ansiblewan-zheng-an-zhuang-pi-liang-de-zai-yuan-cheng-fu-wu-qi-shang-zhi-xing-ming-ling/</url>
      <content type="html"><![CDATA[<p>批量的在远程服务器上执行命令</p><h1 id="1-什么是ansible"><a href="#1-什么是ansible" class="headerlink" title="1.什么是ansible"></a>1.什么是ansible</h1><p>ansible是个什么东西呢？官方的title是“Ansible is Simple IT Automation”——简单的自动化IT工具。这个工具的目标有这么几项：让我们自动化部署APP；自动化管理配置项；自动化的持续交付；自动化的（AWS）云服务管理。</p><a id="more"></a><p>所有的这几个目标本质上来说都是在一个台或者几台服务器上，执行一系列的命令而已。就像我之前有介绍过的Fabric，以及我们基于Fabric开发的自动化应用部署的工具： Essay 。都是做了这么个事——批量的在远程服务器上执行命令 。</p><p>那么fabric和ansible有什么差别呢？简单来说fabric像是一个工具箱，提供了很多好用的工具，用来在Remote执行命令，而Ansible则是提供了一套简单的流程，你要按照它的流程来做，就能轻松完成任务。这就像是库和框架的关系一样。</p><p>当然，它们之间也是有共同点的——都是基于 paramiko 开发的。这个paramiko是什么呢？它是一个纯Python实现的ssh协议库。因此fabric和ansible还有一个共同点就是不需要在远程主机上安装client/agents，因为它们是基于ssh来和远程主机通讯的。</p><h1 id="2-快速安装"><a href="#2-快速安装" class="headerlink" title="2.快速安装"></a>2.快速安装</h1><p>上面简单介绍了下这是个什么东西，怎么安装呢？也很简单，因为ansible是python开发的，因此可以这么安装:</p><p>使用yum安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y  </span><br><span class="line">yum install ansible -y</span><br></pre></td></tr></table></figure><h1 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h1><p>ansible通过文件来定义你要管理的主机,也就是说把你需要的管理的主机ip写到一个文件中即可。<br>这个文件一般名为hosts，它可以放在多个路径下，也可以自定义名称和路径。 默认我们用/etc/ansible/hosts这个文件即可</p><p>hosts文件的格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[node]</span><br><span class="line">10.2.2.121  </span><br><span class="line">10.2.2.122</span><br></pre></td></tr></table></figure><p>默认ssh端口是22，如果主机端口号是其他的，在ip后加:端口号即可，如10.2.1.203的端口是2211，属于test组，格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[test]</span><br><span class="line">10.2.1.201  </span><br><span class="line">10.2.1.202  </span><br><span class="line">10.2.1.203:2211</span><br></pre></td></tr></table></figure><h1 id="4-使用ssh-keygen产生ssh密钥"><a href="#4-使用ssh-keygen产生ssh密钥" class="headerlink" title="4.使用ssh-keygen产生ssh密钥"></a>4.使用ssh-keygen产生ssh密钥</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@test-201 ~]# ssh-keygen </span><br><span class="line">Generating public/private rsa key pair.  </span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa):  </span><br><span class="line">Enter passphrase (empty for no passphrase):  </span><br><span class="line">Enter same passphrase again:  </span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa.  </span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub.  </span><br><span class="line">The key fingerprint is:  </span><br><span class="line">dd:20:23:7c:1a:2e:01:bf:b1:67:7a:08:87:5f:e6:7e root@test-201  </span><br><span class="line">The key’s randomart image is:  </span><br><span class="line">+–[ RSA 2048]—-+ </span><br><span class="line">| . | </span><br><span class="line">| o . | </span><br><span class="line">| + + + . | </span><br><span class="line">| . * = + o | </span><br><span class="line">| o = B S . . | </span><br><span class="line">| + X | </span><br><span class="line">| + o | </span><br><span class="line">| o E | </span><br><span class="line">| .. | </span><br><span class="line">+—————–+</span><br></pre></td></tr></table></figure><p>将公钥发送到要管理的服务器 使用ssh-copy-id命令</p><p>比如要发送到10.2.31.202，使用如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@test-201 ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub 10.2.31.202 </span><br><span class="line">root@10.2.31.202’s password:  </span><br><span class="line">Now try logging into the machine, with “ssh ‘10.2.31.202’”, and check in:</span><br><span class="line"></span><br><span class="line">.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">to make sure we haven’t added extra keys that you weren’t expecting.</span><br></pre></td></tr></table></figure><h1 id="5-使用ansible"><a href="#5-使用ansible" class="headerlink" title="5.使用ansible"></a>5.使用ansible</h1><p>命令格式如下： <code>ansible + 主机组名称 + -m + 模块名称 + -a + 参数</code></p><p>主机组名称，即hosts中定义的主机组名称</p><p>-m 指使用模块，后加指定的模块名称<br>-a 指传给模块的参数</p><p>在不指定模块时，默认调用command模块。</p><p>如我们想看下test组上的服务器的/tmp下面有哪些文件，可以使用如下命令</p><p><code>ansible test -a “ls /tmp”</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@test-201 ~]# ansible test -a &quot;ls /tmp&quot;</span><br><span class="line">10.2.31.203 | SUCCESS | rc=0 &gt;&gt;  </span><br><span class="line">ansible_EMEGZI  </span><br><span class="line">testabcdefg</span><br></pre></td></tr></table></figure><p>我们可以使用copy模块，将本地文件发送到目标服务器上，如：</p><p><code>ansible test -m copy -a “src=/root/install.log dest=/tmp”</code></p><p>这个命令是将本地的/root/install.log发送到test组的/tmp下，执行的效果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@test-201 ~]# ansible test -m copy -a &quot;src=/root/install.log dest=/tmp&quot;</span><br><span class="line">10.2.31.203 | SUCCESS =&gt; &#123;  </span><br><span class="line">    &quot;changed&quot;: true, </span><br><span class="line">    &quot;checksum&quot;: &quot;114ee153946d9cd2e690c405e5796a4fcc400542&quot;, </span><br><span class="line">    &quot;dest&quot;: &quot;/tmp/install.log&quot;, </span><br><span class="line">    &quot;gid&quot;: 0, </span><br><span class="line">    &quot;group&quot;: &quot;root&quot;, </span><br><span class="line">    &quot;md5sum&quot;: &quot;17b18780156a31a65d62a324110d686e&quot;, </span><br><span class="line">    &quot;mode&quot;: &quot;0644&quot;, </span><br><span class="line">    &quot;owner&quot;: &quot;root&quot;, </span><br><span class="line">    &quot;secontext&quot;: &quot;unconfined_u:object_r:admin_home_t:s0&quot;, </span><br><span class="line">    &quot;size&quot;: 43688, </span><br><span class="line">    &quot;src&quot;: &quot;/root/.ansible/tmp/ansible-tmp-1466157410.68-191787255687953/source&quot;, </span><br><span class="line">    &quot;state&quot;: &quot;file&quot;, </span><br><span class="line">    &quot;uid&quot;: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你可以使用ansible-doc –list查看当前的所有模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@test-201 ~]# ansible-doc  --list                       </span><br><span class="line">….</span><br><span class="line">….                                                        </span><br><span class="line">authorized_key                     Adds or removes an SSH authorized key  </span><br><span class="line">azure                              create or terminate a virtual machine in azure  </span><br><span class="line">azure_rm_deployment                Create or destroy Azure Resource Manager template deployments  </span><br><span class="line">azure_rm_networkinterface          Manage Azure network interfaces.  </span><br><span class="line">azure_rm_networkinterface_facts    Get network interface facts.  </span><br><span class="line">azure_rm_publicipaddress           Manage Azure Public IP Addresses.  </span><br><span class="line">azure_rm_publicipaddress_facts     Get public IP facts.  </span><br><span class="line">azure_rm_resourcegroup             Manage Azure resource groups.  </span><br><span class="line">azure_rm_resourcegroup_facts       Get resource group facts.  </span><br><span class="line">azure_rm_securitygroup             Manage Azure network security groups.  </span><br><span class="line">….</span><br><span class="line">…</span><br></pre></td></tr></table></figure><p>ansible自带了很多丰富的模块，详细请看：<br><a href="http://docs.ansible.com/ansible/list_of_all_modules.html" target="_blank" rel="noopener">http://docs.ansible.com/ansible/list_of_all_modules.html</a></p><h1 id="6-小技巧"><a href="#6-小技巧" class="headerlink" title="6.小技巧:"></a>6.小技巧:</h1><p>有时候如果想直接操作某台服务器,但又没有在hosts里定义这台服务器时,可以使用如下命令:</p><p><code>ansible all -i ‘服务器ip,’</code><br>注意服务器ip后面要加个,</p><p>如 <code>ansible all -i ‘10.2.31.201,’ -u test -k -a ‘uptime’</code></p><p>BUG?</p><p>目前遇到两个bug(也可能是我的使用方式不对,正在关注中) 1.在中文路径下无法使用.<br>如果在一个含中文的路径下面使用ansible,会无法执行,提示:   UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe4 in position 14<br>所以不要跑到中文路径下面去执行ansible</p><p>2.su命令不能用.<br>使用su命令不成功,无在目标机器上通过一个普通用户su切换为root执行相关命令 错误如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible Timeout (12s) waiting for privilege escalation prompt</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>幸运大转盘抽奖 抽奖算法 程序实现逻辑</title>
      <link href="/tech/xing-yun-da-zhuan-pan-chou-jiang-cheng-xu-shi-xian-luo-ji/"/>
      <url>/tech/xing-yun-da-zhuan-pan-chou-jiang-cheng-xu-shi-xian-luo-ji/</url>
      <content type="html"><![CDATA[<blockquote><p>近期碰到的一个需求，实现一个类似大转盘抽奖的功能，需自定义奖项，各奖项中奖概率，当日抽奖最大次数，抽奖成本等。分享一个简单的java代码的实现的思路，有不足之处感谢各位指正。<br><a id="more"></a></p></blockquote><p><img src="http://file.qianxunclub.com/qianxun/e/f3/3222d8e23d1b9889a6913d8d1fb14.png" alt=""></p><h1 id="初步方法"><a href="#初步方法" class="headerlink" title="初步方法"></a>初步方法</h1><p>首先要定义几个奖品，例如：</p><ul><li>iphone 中奖机率 10% </li><li>100元购物卷 中奖机率 30% </li><li>10元购物卷 中奖机率 50% </li></ul><p>总的中奖机率是 10%+30%+50%=90%</p><p>剩余10%是谢谢惠顾，不中奖的</p><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>这个是把所有商品按照概率分配到数组里面</p><ul><li>A[0] = iphone</li><li>A[1] = iphone </li><li>A[2] = iphone </li><li>…</li><li><p>A[10] = iphone</p></li><li><p>A[11] = 100元购物卷 </p></li><li>A[12] = 100元购物卷 </li><li>…</li></ul><p>然后随机一个0到99的数字，例如现在随机的数字是2</p><p>那么A[2]就是中奖的商品A[2] = iphone</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义中奖率分母 百分之</span></span><br><span class="line"><span class="keyword">int</span> probabilityCount = <span class="number">100</span>;  </span><br><span class="line">String[] prizesId = <span class="keyword">new</span> String[probabilityCount];  </span><br><span class="line"><span class="comment">//获取商品列表</span></span><br><span class="line">List&lt;AdPrizeInfo&gt; prizeInfoList = prizeInfoService.getPrizeInfo();  </span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;  </span><br><span class="line"><span class="comment">//循环所有商品</span></span><br><span class="line"><span class="keyword">for</span> (AdPrizeInfo prize : prizeInfoList) &#123;  </span><br><span class="line">    Integer probability = prize.getOdds();</span><br><span class="line">    <span class="comment">//循环商品概率</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; probability; i++) &#123;</span><br><span class="line">        prizesId[num] = prize.getId();</span><br><span class="line">        num ++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机一个数字</span></span><br><span class="line"><span class="keyword">int</span> index = (<span class="keyword">int</span>) (Math.random() * probabilityCount);  </span><br><span class="line"><span class="comment">//获取到随机商品ID</span></span><br><span class="line">String prizeId = prizesId[index];</span><br></pre></td></tr></table></figure><h1 id="优化方法"><a href="#优化方法" class="headerlink" title="优化方法"></a>优化方法</h1><h2 id="设计思路-1"><a href="#设计思路-1" class="headerlink" title="设计思路"></a>设计思路</h2><p>以上方法如果大概率的话，是很吃内存的，整理优化为一下方法：</p><p><img src="http://file.qianxunclub.com/qianxun/c/73/ff890460e3fe6895416d64840985d.jpg" alt=""></p><p>使用范围算法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义中奖率分母 百分之</span></span><br><span class="line"><span class="keyword">int</span> probabilityCount = <span class="number">100</span>;  </span><br><span class="line"><span class="comment">//最小概率值</span></span><br><span class="line">String min = <span class="string">"min"</span>;  </span><br><span class="line"><span class="comment">//最大概率值</span></span><br><span class="line">String max = <span class="string">"max"</span>;  </span><br><span class="line">Integer tempInt = <span class="number">0</span>;  </span><br><span class="line"><span class="comment">//待中奖商品数组</span></span><br><span class="line">Map&lt;String,Map&lt;String,Integer&gt;&gt; prizesMap = <span class="keyword">new</span> HashMap&lt;&gt;();  </span><br><span class="line"><span class="comment">//获取商品列表</span></span><br><span class="line">List&lt;AdPrizeInfo&gt; prizeInfoList = prizeInfoService.getPrizeInfo();  </span><br><span class="line"><span class="keyword">for</span> (AdPrizeInfo prize : prizeInfoList) &#123;  </span><br><span class="line">    Map&lt;String,Integer&gt; oddsMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">//最小概率值</span></span><br><span class="line">    oddsMap.put(min,tempInt);</span><br><span class="line">    tempInt = tempInt + prize.getOdds();</span><br><span class="line">    <span class="comment">//最大概率值</span></span><br><span class="line">    oddsMap.put(max,tempInt);</span><br><span class="line">    prizesMap.put(prize.getId(),oddsMap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//随机一个数字</span></span><br><span class="line"><span class="keyword">int</span> index = (<span class="keyword">int</span>) (Math.random() * probabilityCount);  </span><br><span class="line">AdPrizeInfo prizeInfo = <span class="keyword">null</span>;  </span><br><span class="line">Set&lt;String&gt; prizesIds = prizesMap.keySet();  </span><br><span class="line"><span class="keyword">for</span>(String prizesId : prizesIds)&#123;  </span><br><span class="line">    Map&lt;String,Integer&gt; oddsMap = prizesMap.get(prizesId);</span><br><span class="line">    Integer minNum = oddsMap.get(min);</span><br><span class="line">    Integer maxNum = oddsMap.get(max);</span><br><span class="line">    <span class="comment">//校验index 再哪个商品概率中间</span></span><br><span class="line">    <span class="keyword">if</span>(minNum &lt;= index &amp;&amp; maxNum &gt; index)&#123;</span><br><span class="line">        prizeInfo = prizeInfoService.selectByPrimaryKey(prizesId);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果为空，则没中奖</span></span><br><span class="line"><span class="keyword">if</span>(prizeInfo == <span class="keyword">null</span>)&#123;  </span><br><span class="line">    prizeInfo = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 抽奖 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<p><img src="http://cdn.qianxunclub.com/4f3ea7c53f5a491847890c19e3d7c.jpg" alt=""></p><ul><li>姓 名：张斌</li><li>昵 称：千寻啊千寻</li><li>职 业：蚂蚁金服一名老老实实的程序猿</li><li>Ｑ Ｑ：960339491</li><li>Email：<a href="mailto:960339491@qq.com" target="_blank" rel="noopener">960339491@qq.com</a></li><li>位 置：深圳</li><li>爱 好：那特么有时间去爱好啊，暂时爱好就是找媳妇，不过最近喜欢骑自行车、放风筝、逛公园和商场，还有一个LOL（巨龙之巢：千寻啊千寻）</li><li>生 日：1990年09月11日</li><li>性 格：我性格各种好啊，不打人不骂架、特别喜欢交朋友，特别是女的，哇哈哈哈</li></ul><h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p>我就一个山沟沟的一个小人物来大深圳打工的孩纸，其他的别着急，我还别编好，我编好了再来写，感觉这个好难写。<br>我还有一个好妹妹，是一个演员，有兴趣的可以看看她博客。<br><strong>最重要一点，我想要找女朋友啊！！！！</strong></p>]]></content>
    </entry>
    
    <entry>
      <title>标签云</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>留言板</title>
      <link href="/saidlist/index.html"/>
      <url>/saidlist/index.html</url>
      <content type="html"><![CDATA[<p><strong>博客</strong>  </p><p>使用程序：Hexo  </p><p><strong>友情链接</strong>  </p><p>昵称：千寻啊千寻<br>网站：qianxunclub.com<br>描述：编程技术分享<br>LOGO：<br><code>https://cdn.qianxunclub.com/c20fa0d6431df54956f1b8db7d281.jpg</code>  </p><p>欢迎各位添加友情连接哇，有什么建议可以给我留言哦~</p>]]></content>
    </entry>
    
  
</search>
